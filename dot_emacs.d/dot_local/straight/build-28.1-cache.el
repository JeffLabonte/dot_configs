
:tanat

"28.1"

#s(hash-table size 325 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("org-elpa" ("2022-06-17 08:44:28" nil (:local-repo nil :package "org-elpa" :type git)) "melpa" ("2022-06-17 08:44:28" nil (:type git :host github :repo "melpa/melpa" :build nil :package "melpa" :local-repo "melpa")) "gnu-elpa-mirror" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/gnu-elpa-mirror" :build nil :package "gnu-elpa-mirror" :local-repo "gnu-elpa-mirror")) "el-get" ("2022-06-17 08:44:28" nil (:type git :host github :repo "dimitri/el-get" :build nil :files ("*.el" ("recipes" "recipes/el-get.rcp") "methods" "el-get-pkg.el") :flavor melpa :package "el-get" :local-repo "el-get")) "emacsmirror-mirror" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/emacsmirror-mirror" :build nil :package "emacsmirror-mirror" :local-repo "emacsmirror-mirror")) "straight" ("2022-06-17 08:44:28" ("emacs") (:host github :repo "raxod502/straight.el" :branch "develop" :local-repo "straight.el" :files ("straight*.el") :package "straight" :type git)) "use-package" ("2022-06-17 08:44:28" ("emacs" "bind-key") (:type git :flavor melpa :files (:defaults (:exclude "bind-key.el" "bind-chord.el" "use-package-chords.el" "use-package-ensure-system-package.el") "use-package-pkg.el") :host github :repo "jwiegley/use-package" :package "use-package" :local-repo "use-package")) "bind-key" ("2022-06-17 08:44:28" nil (:flavor melpa :files ("bind-key.el" "bind-key-pkg.el") :package "bind-key" :local-repo "use-package" :type git :repo "jwiegley/use-package" :host github)) "auto-minor-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "joewreschnig/auto-minor-mode" :package "auto-minor-mode" :local-repo "auto-minor-mode")) "gcmh" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host gitlab :repo "koral/gcmh" :package "gcmh" :local-repo "gcmh")) "explain-pause-mode" ("2022-06-17 08:44:28" nil (:host github :repo "lastquestion/explain-pause-mode" :package "explain-pause-mode" :type git :local-repo "explain-pause-mode")) "all-the-icons" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files (:defaults "data" "all-the-icons-pkg.el") :host github :repo "domtronn/all-the-icons.el" :package "all-the-icons" :local-repo "all-the-icons.el")) "hide-mode-line" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "hlissner/emacs-hide-mode-line" :package "hide-mode-line" :local-repo "emacs-hide-mode-line")) "highlight-numbers" ("2022-06-17 08:44:28" ("emacs" "parent-mode") (:type git :flavor melpa :host github :repo "Fanael/highlight-numbers" :package "highlight-numbers" :local-repo "highlight-numbers")) "parent-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "Fanael/parent-mode" :package "parent-mode" :local-repo "parent-mode")) "rainbow-delimiters" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "Fanael/rainbow-delimiters" :package "rainbow-delimiters" :local-repo "rainbow-delimiters")) "restart-emacs" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "iqbalansari/restart-emacs" :package "restart-emacs" :local-repo "restart-emacs")) "better-jumper" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "gilbertw1/better-jumper" :package "better-jumper" :local-repo "better-jumper")) "dtrt-indent" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "jscheid/dtrt-indent" :package "dtrt-indent" :local-repo "dtrt-indent")) "helpful" ("2022-06-17 08:44:28" ("emacs" "dash" "s" "f" "elisp-refs") (:type git :flavor melpa :host github :repo "Wilfred/helpful" :package "helpful" :local-repo "helpful")) "dash" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files ("dash.el" "dash.texi" "dash-pkg.el") :host github :repo "magnars/dash.el" :package "dash" :local-repo "dash.el")) "s" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "magnars/s.el" :package "s" :local-repo "s.el")) "f" ("2022-06-17 08:44:28" ("emacs" "s" "dash") (:type git :flavor melpa :host github :repo "rejeep/f.el" :package "f" :local-repo "f.el")) "elisp-refs" ("2022-06-17 08:44:28" ("dash" "s") (:type git :flavor melpa :files (:defaults (:exclude "elisp-refs-bench.el") "elisp-refs-pkg.el") :host github :repo "Wilfred/elisp-refs" :package "elisp-refs" :local-repo "elisp-refs")) "pcre2el" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "joddie/pcre2el" :package "pcre2el" :local-repo "pcre2el")) "smartparens" ("2022-06-17 08:44:28" ("dash" "cl-lib") (:type git :flavor melpa :host github :repo "Fuco1/smartparens" :package "smartparens" :local-repo "smartparens")) "ws-butler" ("2022-06-17 08:44:28" ("emacs") (:host github :repo "hlissner/ws-butler" :flavor melpa :package "ws-butler" :type git :local-repo "ws-butler")) "projectile" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "bbatsov/projectile" :package "projectile" :local-repo "projectile")) "project" ("2022-06-17 08:44:28" ("emacs" "xref") (:type git :host github :repo "emacs-straight/project" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "project" :local-repo "project")) "xref" ("2022-06-17 08:44:28" ("emacs") (:type git :host github :repo "emacs-straight/xref" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "xref" :local-repo "xref")) "general" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "noctuid/general.el" :package "general" :local-repo "general.el")) "which-key" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "justbur/emacs-which-key" :package "which-key" :local-repo "emacs-which-key")) "pyim" ("2022-06-17 08:44:28" ("emacs" "async" "xr") (:type git :flavor melpa :host github :repo "tumashu/pyim" :package "pyim" :local-repo "pyim")) "async" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "jwiegley/emacs-async" :package "async" :local-repo "emacs-async")) "xr" ("2022-06-17 08:44:28" ("emacs") (:type git :host github :repo "emacs-straight/xr" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "xr" :local-repo "xr")) "fcitx" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "cute-jumper/fcitx.el" :package "fcitx" :local-repo "fcitx.el")) "ace-pinyin" ("2022-06-17 08:44:28" ("avy" "pinyinlib") (:type git :flavor melpa :host github :repo "cute-jumper/ace-pinyin" :package "ace-pinyin" :local-repo "ace-pinyin")) "avy" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "abo-abo/avy" :package "avy" :local-repo "avy")) "pinyinlib" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "cute-jumper/pinyinlib.el" :package "pinyinlib" :local-repo "pinyinlib.el")) "pangu-spacing" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "coldnew/pangu-spacing" :package "pangu-spacing" :local-repo "pangu-spacing")) "company" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files (:defaults "icons" ("images/small" "doc/images/small/*.png") "company-pkg.el") :host github :repo "company-mode/company-mode" :package "company" :local-repo "company-mode")) "company-dict" ("2022-06-17 08:44:28" ("emacs" "company" "parent-mode") (:type git :flavor melpa :host github :repo "hlissner/emacs-company-dict" :package "company-dict" :local-repo "emacs-company-dict")) "flx-ido" ("2022-06-17 08:44:28" ("flx" "cl-lib") (:type git :flavor melpa :files ("flx-ido.el" "flx-ido-pkg.el") :host github :repo "lewang/flx" :package "flx-ido" :local-repo "flx")) "flx" ("2022-06-17 08:44:28" ("cl-lib") (:flavor melpa :files ("flx.el" "flx-pkg.el") :package "flx" :local-repo "flx" :type git :repo "lewang/flx" :host github)) "ido-completing-read+" ("2022-06-17 08:44:28" ("emacs" "seq" "memoize") (:type git :flavor melpa :host github :repo "DarwinAwardWinner/ido-completing-read-plus" :package "ido-completing-read+" :local-repo "ido-completing-read-plus")) "memoize" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "skeeto/emacs-memoize" :package "memoize" :local-repo "emacs-memoize")) "ido-sort-mtime" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "pkkm/ido-sort-mtime" :package "ido-sort-mtime" :local-repo "ido-sort-mtime")) "ido-vertical-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "creichert/ido-vertical-mode.el" :package "ido-vertical-mode" :local-repo "ido-vertical-mode.el")) "crm-custom" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "DarwinAwardWinner/crm-custom" :package "crm-custom" :local-repo "crm-custom")) "swiper" ("2022-06-17 08:44:28" ("emacs" "ivy") (:type git :flavor melpa :files ("swiper.el" "swiper-pkg.el") :host github :repo "abo-abo/swiper" :package "swiper" :local-repo "swiper")) "ivy" ("2022-06-17 08:44:28" ("emacs") (:flavor melpa :files (:defaults (:exclude "swiper.el" "counsel.el" "ivy-hydra.el" "ivy-avy.el") "doc/ivy-help.org" "ivy-pkg.el") :package "ivy" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "ivy-hydra" ("2022-06-17 08:44:28" ("emacs" "ivy" "hydra") (:flavor melpa :files ("ivy-hydra.el" "ivy-hydra-pkg.el") :package "ivy-hydra" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "hydra" ("2022-06-17 08:44:28" ("cl-lib" "lv") (:type git :flavor melpa :files (:defaults (:exclude "lv.el") "hydra-pkg.el") :host github :repo "abo-abo/hydra" :package "hydra" :local-repo "hydra")) "lv" ("2022-06-17 08:44:28" nil (:flavor melpa :files ("lv.el" "lv-pkg.el") :package "lv" :local-repo "hydra" :type git :repo "abo-abo/hydra" :host github)) "ivy-avy" ("2022-06-17 08:44:28" ("emacs" "ivy" "avy") (:flavor melpa :files ("ivy-avy.el" "ivy-avy-pkg.el") :package "ivy-avy" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "counsel" ("2022-06-17 08:44:28" ("emacs" "ivy" "swiper") (:flavor melpa :files ("counsel.el" "counsel-pkg.el") :package "counsel" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "amx" ("2022-06-17 08:44:28" ("emacs" "s") (:type git :flavor melpa :host github :repo "DarwinAwardWinner/amx" :package "amx" :local-repo "amx")) "counsel-projectile" ("2022-06-17 08:44:28" ("counsel" "projectile") (:type git :flavor melpa :host github :repo "ericdanan/counsel-projectile" :package "counsel-projectile" :local-repo "counsel-projectile")) "ivy-rich" ("2022-06-17 08:44:28" ("emacs" "ivy") (:type git :flavor melpa :host github :repo "Yevgnen/ivy-rich" :package "ivy-rich" :local-repo "ivy-rich")) "wgrep" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("wgrep.el" "wgrep-pkg.el") :host github :repo "mhayashi1120/Emacs-wgrep" :package "wgrep" :local-repo "Emacs-wgrep")) "doom-themes" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :files (:defaults "themes/*.el" "themes/*/*.el" "extensions/*.el" "doom-themes-pkg.el") :host github :repo "doomemacs/themes" :package "doom-themes" :local-repo "themes")) "solaire-mode" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/emacs-solaire-mode" :package "solaire-mode" :local-repo "emacs-solaire-mode")) "hl-todo" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "tarsius/hl-todo" :package "hl-todo" :local-repo "hl-todo")) "highlight-indent-guides" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "DarthFennec/highlight-indent-guides" :package "highlight-indent-guides" :local-repo "highlight-indent-guides")) "minimap" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/minimap" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "minimap" :local-repo "minimap")) "doom-modeline" ("2022-06-17 08:44:28" ("emacs" "all-the-icons" "shrink-path" "dash") (:type git :flavor melpa :host github :repo "seagle0128/doom-modeline" :package "doom-modeline" :local-repo "doom-modeline")) "shrink-path" ("2022-06-17 08:44:28" ("emacs" "s" "dash" "f") (:type git :flavor melpa :host gitlab :repo "bennya/shrink-path.el" :package "shrink-path" :local-repo "shrink-path.el")) "anzu" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/anzu" :package "anzu" :local-repo "anzu")) "evil-anzu" ("2022-06-17 08:44:28" ("evil" "anzu") (:type git :flavor melpa :host github :repo "emacsorphanage/evil-anzu" :package "evil-anzu" :local-repo "evil-anzu")) "evil" ("2022-06-17 08:44:28" ("emacs" "goto-chg" "cl-lib") (:type git :flavor melpa :files (:defaults "doc/build/texinfo/evil.texi" (:exclude "evil-test-helpers.el") "evil-pkg.el") :host github :repo "emacs-evil/evil" :package "evil" :local-repo "evil")) "goto-chg" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "emacs-evil/goto-chg" :package "goto-chg" :local-repo "goto-chg")) "nav-flash" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "rolandwalker/nav-flash" :package "nav-flash" :local-repo "nav-flash")) "neotree" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :files (:defaults "icons" "neotree-pkg.el") :host github :repo "jaypei/emacs-neotree" :package "neotree" :local-repo "emacs-neotree")) "evil-goggles" ("2022-06-17 08:44:28" ("emacs" "evil") (:type git :flavor melpa :host github :repo "edkolev/evil-goggles" :package "evil-goggles" :local-repo "evil-goggles")) "centaur-tabs" ("2022-06-17 08:44:28" ("emacs" "powerline" "cl-lib") (:type git :flavor melpa :host github :repo "ema2159/centaur-tabs" :package "centaur-tabs" :local-repo "centaur-tabs")) "powerline" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "milkypostman/powerline" :package "powerline" :local-repo "powerline")) "unicode-fonts" ("2022-06-17 08:44:28" ("font-utils" "ucs-utils" "list-utils" "persistent-soft" "pcache") (:type git :flavor melpa :host github :repo "rolandwalker/unicode-fonts" :package "unicode-fonts" :local-repo "unicode-fonts")) "font-utils" ("2022-06-17 08:44:28" ("persistent-soft" "pcache") (:type git :flavor melpa :host github :repo "rolandwalker/font-utils" :package "font-utils" :local-repo "font-utils")) "persistent-soft" ("2022-06-17 08:44:28" ("pcache" "list-utils") (:type git :flavor melpa :host github :repo "rolandwalker/persistent-soft" :package "persistent-soft" :local-repo "persistent-soft")) "pcache" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "sigma/pcache" :package "pcache" :local-repo "pcache")) "list-utils" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "rolandwalker/list-utils" :package "list-utils" :local-repo "list-utils")) "ucs-utils" ("2022-06-17 08:44:28" ("persistent-soft" "pcache" "list-utils") (:type git :flavor melpa :host github :repo "rolandwalker/ucs-utils" :package "ucs-utils" :local-repo "ucs-utils")) "git-gutter-fringe" ("2022-06-17 08:44:28" ("git-gutter" "fringe-helper" "cl-lib" "emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/git-gutter-fringe" :package "git-gutter-fringe" :local-repo "git-gutter-fringe")) "git-gutter" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/git-gutter" :package "git-gutter" :local-repo "git-gutter")) "fringe-helper" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "nschum/fringe-helper.el" :package "fringe-helper" :local-repo "fringe-helper.el")) "vi-tilde-fringe" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "syl20bnr/vi-tilde-fringe" :package "vi-tilde-fringe" :local-repo "vi-tilde-fringe")) "ace-window" ("2022-06-17 08:44:28" ("avy") (:type git :flavor melpa :host github :repo "abo-abo/ace-window" :package "ace-window" :local-repo "ace-window")) "persp-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "Bad-ptr/persp-mode.el" :package "persp-mode" :local-repo "persp-mode.el")) "evil-args" ("2022-06-17 08:44:28" ("evil") (:type git :flavor melpa :host github :repo "wcsmith/evil-args" :package "evil-args" :local-repo "evil-args")) "evil-easymotion" ("2022-06-17 08:44:28" ("emacs" "avy" "cl-lib") (:type git :flavor melpa :host github :repo "PythonNut/evil-easymotion" :package "evil-easymotion" :local-repo "evil-easymotion")) "evil-embrace" ("2022-06-17 08:44:28" ("emacs" "embrace" "evil-surround") (:type git :flavor melpa :host github :repo "cute-jumper/evil-embrace.el" :package "evil-embrace" :local-repo "evil-embrace.el")) "embrace" ("2022-06-17 08:44:28" ("cl-lib" "expand-region") (:type git :flavor melpa :host github :repo "cute-jumper/embrace.el" :package "embrace" :local-repo "embrace.el")) "expand-region" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "magnars/expand-region.el" :package "expand-region" :local-repo "expand-region.el")) "evil-surround" ("2022-06-17 08:44:28" ("evil") (:type git :flavor melpa :host github :repo "emacs-evil/evil-surround" :package "evil-surround" :local-repo "evil-surround")) "evil-escape" ("2022-06-17 08:44:28" ("emacs" "evil" "cl-lib") (:host github :repo "hlissner/evil-escape" :flavor melpa :package "evil-escape" :type git :local-repo "evil-escape")) "evil-exchange" ("2022-06-17 08:44:28" ("evil" "cl-lib") (:type git :flavor melpa :host github :repo "Dewdrops/evil-exchange" :package "evil-exchange" :local-repo "evil-exchange")) "evil-indent-plus" ("2022-06-17 08:44:28" ("evil" "cl-lib") (:type git :flavor melpa :host github :repo "TheBB/evil-indent-plus" :package "evil-indent-plus" :local-repo "evil-indent-plus")) "evil-lion" ("2022-06-17 08:44:28" ("emacs" "evil") (:type git :flavor melpa :host github :repo "edkolev/evil-lion" :package "evil-lion" :local-repo "evil-lion")) "evil-nerd-commenter" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "redguardtoo/evil-nerd-commenter" :package "evil-nerd-commenter" :local-repo "evil-nerd-commenter")) "evil-numbers" ("2022-06-17 08:44:28" ("emacs" "evil") (:type git :flavor melpa :host github :repo "juliapath/evil-numbers" :package "evil-numbers" :local-repo "evil-numbers")) "evil-snipe" ("2022-06-17 08:44:28" ("emacs" "evil" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/evil-snipe" :package "evil-snipe" :local-repo "evil-snipe")) "evil-textobj-anyblock" ("2022-06-17 08:44:28" ("cl-lib" "evil") (:host github :repo "willghatch/evil-textobj-anyblock" :branch "fix-inner-block" :flavor melpa :package "evil-textobj-anyblock" :type git :local-repo "evil-textobj-anyblock")) "evil-traces" ("2022-06-17 08:44:28" ("emacs" "evil") (:type git :flavor melpa :host github :repo "mamapanda/evil-traces" :package "evil-traces" :local-repo "evil-traces")) "evil-visualstar" ("2022-06-17 08:44:28" ("evil") (:type git :flavor melpa :host github :repo "bling/evil-visualstar" :package "evil-visualstar" :local-repo "evil-visualstar")) "exato" ("2022-06-17 08:44:28" ("evil" "emacs") (:type git :flavor melpa :host github :repo "ninrod/exato" :package "exato" :local-repo "exato")) "evil-quick-diff" ("2022-06-17 08:44:28" ("evil" "cl-lib") (:host github :repo "rgrinberg/evil-quick-diff" :package "evil-quick-diff" :type git :local-repo "evil-quick-diff")) "evil-collection" ("2022-06-17 08:44:28" ("emacs" "evil" "annalist") (:type git :flavor melpa :files (:defaults "modes" "evil-collection-pkg.el") :host github :repo "emacs-evil/evil-collection" :package "evil-collection" :local-repo "evil-collection")) "annalist" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "noctuid/annalist.el" :package "annalist" :local-repo "annalist.el")) "yasnippet" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :files ("yasnippet.el" "snippets" "yasnippet-pkg.el") :host github :repo "joaotavora/yasnippet" :package "yasnippet" :local-repo "yasnippet")) "vimish-fold" ("2022-06-17 08:44:28" ("emacs" "cl-lib" "f") (:type git :flavor melpa :host github :repo "matsievskiysv/vimish-fold" :package "vimish-fold" :local-repo "vimish-fold")) "evil-vimish-fold" ("2022-06-17 08:44:28" ("emacs" "evil" "vimish-fold") (:type git :flavor melpa :host github :repo "alexmurray/evil-vimish-fold" :package "evil-vimish-fold" :local-repo "evil-vimish-fold")) "evil-multiedit" ("2022-06-17 08:44:28" ("emacs" "evil" "iedit" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/evil-multiedit" :package "evil-multiedit" :local-repo "evil-multiedit")) "iedit" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "victorhge/iedit" :package "iedit" :local-repo "iedit")) "evil-mc" ("2022-06-17 08:44:28" ("emacs" "evil" "cl-lib") (:type git :flavor melpa :host github :repo "gabesoft/evil-mc" :package "evil-mc" :local-repo "evil-mc")) "parinfer-rust-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "justinbarclay/parinfer-rust-mode" :package "parinfer-rust-mode" :local-repo "parinfer-rust-mode")) "auto-yasnippet" ("2022-06-17 08:44:28" ("yasnippet") (:type git :flavor melpa :host github :repo "abo-abo/auto-yasnippet" :package "auto-yasnippet" :local-repo "auto-yasnippet")) "doom-snippets" ("2022-06-17 08:44:28" ("emacs" "cl-lib" "yasnippet") (:host github :repo "doomemacs/snippets" :files (:defaults "*") :package "doom-snippets" :type git :local-repo "snippets")) "adaptive-wrap" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/adaptive-wrap" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "adaptive-wrap" :local-repo "adaptive-wrap")) "diredfl" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "purcell/diredfl" :package "diredfl" :local-repo "diredfl")) "dired-git-info" ("2022-06-17 08:44:28" ("emacs") (:type git :host github :repo "emacs-straight/dired-git-info" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "dired-git-info" :local-repo "dired-git-info")) "diff-hl" ("2022-06-17 08:44:28" ("cl-lib" "emacs") (:type git :flavor melpa :host github :repo "dgutov/diff-hl" :package "diff-hl" :local-repo "diff-hl")) "dired-rsync" ("2022-06-17 08:44:28" ("s" "dash" "emacs") (:type git :flavor melpa :host github :repo "stsquad/dired-rsync" :package "dired-rsync" :local-repo "dired-rsync")) "fd-dired" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "yqrashawn/fd-dired" :package "fd-dired" :local-repo "fd-dired")) "ibuffer-projectile" ("2022-06-17 08:44:28" ("projectile" "emacs") (:type git :flavor melpa :host github :repo "purcell/ibuffer-projectile" :package "ibuffer-projectile" :local-repo "ibuffer-projectile")) "ibuffer-vc" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "purcell/ibuffer-vc" :package "ibuffer-vc" :local-repo "ibuffer-vc")) "undo-fu" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :repo "https://codeberg.org/ideasman42/emacs-undo-fu.git" :package "undo-fu" :local-repo "emacs-undo-fu")) "undo-fu-session" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :repo "https://codeberg.org/ideasman42/emacs-undo-fu-session.git" :package "undo-fu-session" :local-repo "emacs-undo-fu-session")) "browse-at-remote" ("2022-06-17 08:44:28" ("f" "s" "cl-lib") (:type git :flavor melpa :host github :repo "rmuslimov/browse-at-remote" :package "browse-at-remote" :local-repo "browse-at-remote")) "git-commit" ("2022-06-17 08:44:28" ("emacs" "compat" "transient" "with-editor") (:type git :flavor melpa :files ("lisp/git-commit.el" "lisp/git-commit-pkg.el" "git-commit-pkg.el") :host github :repo "magit/magit" :package "git-commit" :local-repo "magit")) "compat" ("2022-06-17 08:44:28" ("emacs" "nadvice") (:type git :host github :repo "emacs-straight/compat" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "compat" :local-repo "compat")) "transient" ("2022-06-17 08:44:28" ("emacs" "compat") (:type git :flavor melpa :host github :repo "magit/transient" :package "transient" :local-repo "transient")) "with-editor" ("2022-06-17 08:44:28" ("emacs" "compat") (:type git :flavor melpa :host github :repo "magit/with-editor" :package "with-editor" :local-repo "with-editor")) "git-timemachine" ("2022-06-17 08:44:28" ("emacs" "transient") (:type git :flavor melpa :host gitlab :repo "pidu/git-timemachine" :package "git-timemachine" :local-repo "git-timemachine")) "git-modes" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "magit/git-modes" :package "git-modes" :local-repo "git-modes")) "multi-term" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "manateelazycat/multi-term" :package "multi-term" :local-repo "multi-term")) "vterm" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files ("*" (:exclude ".dir-locals.el" ".gitignore" ".clang-format" ".travis.yml") "vterm-pkg.el") :host github :repo "akermu/emacs-libvterm" :package "vterm" :local-repo "emacs-libvterm")) "flycheck" ("2022-06-17 08:44:28" ("dash" "pkg-info" "let-alist" "seq" "emacs") (:type git :flavor melpa :host github :repo "flycheck/flycheck" :package "flycheck" :local-repo "flycheck")) "pkg-info" ("2022-06-17 08:44:28" ("epl") (:type git :flavor melpa :host github :repo "emacsorphanage/pkg-info" :package "pkg-info" :local-repo "pkg-info")) "epl" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "cask/epl" :package "epl" :local-repo "epl")) "flycheck-popup-tip" ("2022-06-17 08:44:28" ("flycheck" "popup" "emacs") (:type git :flavor melpa :host github :repo "flycheck/flycheck-popup-tip" :package "flycheck-popup-tip" :local-repo "flycheck-popup-tip")) "popup" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "auto-complete/popup-el" :package "popup" :local-repo "popup-el")) "flyspell-correct" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files ("flyspell-correct.el" "flyspell-correct-ido.el" "flyspell-correct-pkg.el") :host github :repo "d12frosted/flyspell-correct" :package "flyspell-correct" :local-repo "flyspell-correct")) "flyspell-correct-ivy" ("2022-06-17 08:44:28" ("flyspell-correct" "ivy" "emacs") (:flavor melpa :files ("flyspell-correct-ivy.el" "flyspell-correct-ivy-pkg.el") :package "flyspell-correct-ivy" :local-repo "flyspell-correct" :type git :repo "d12frosted/flyspell-correct" :host github)) "flyspell-lazy" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "rolandwalker/flyspell-lazy" :package "flyspell-lazy" :local-repo "flyspell-lazy")) "langtool" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "mhayashi1120/Emacs-langtool" :package "langtool" :local-repo "Emacs-langtool")) "writegood-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "bnbeckwith/writegood-mode" :package "writegood-mode" :local-repo "writegood-mode")) "ansible" ("2022-06-17 08:44:28" ("s" "f") (:nonrecursive t :files ("*.el" "snippets" "dict" "ansible-pkg.el") :flavor melpa :repo "k1LoW/emacs-ansible" :host github :package "ansible" :type git :local-repo "emacs-ansible")) "ansible-doc" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/ansible-doc" :package "ansible-doc" :local-repo "ansible-doc")) "jinja2-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "paradoxxxzero/jinja2-mode" :package "jinja2-mode" :local-repo "jinja2-mode")) "yaml-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "yoshiki/yaml-mode" :package "yaml-mode" :local-repo "yaml-mode")) "company-ansible" ("2022-06-17 08:44:28" ("emacs" "company") (:type git :flavor melpa :host github :repo "krzysztof-magosa/company-ansible" :package "company-ansible" :local-repo "company-ansible")) "realgud" ("2022-06-17 08:44:28" ("load-relative" "loc-changes" "test-simple" "emacs") (:type git :flavor melpa :files ("realgud.el" "realgud/.nosearch" "realgud-recursive-autoloads.el" ("realgud/common" "realgud/common/*.el") ("realgud/common/buffer" "realgud/common/buffer/*.el") ("realgud/debugger/bashdb" "realgud/debugger/bashdb/*.el") ("realgud/debugger/gdb" "realgud/debugger/gdb/*.el") ("realgud/debugger/gub" "realgud/debugger/gub/*.el") ("realgud/debugger/ipdb" "realgud/debugger/ipdb/*.el") ("realgud/debugger/jdb" "realgud/debugger/jdb/*.el") ("realgud/debugger/kshdb" "realgud/debugger/kshdb/*.el") ("realgud/debugger/nodejs" "realgud/debugger/nodejs/*.el") ("realgud/debugger/pdb" "realgud/debugger/pdb/*.el") ("realgud/debugger/perldb" "realgud/debugger/perldb/*.el") ("realgud/debugger/rdebug" "realgud/debugger/rdebug/*.el") ("realgud/debugger/remake" "realgud/debugger/remake/*.el") ("realgud/debugger/trepan" "realgud/debugger/trepan/*.el") ("realgud/debugger/trepan.pl" "realgud/debugger/trepan.pl/*.el") ("realgud/debugger/trepan2" "realgud/debugger/trepan2/*.el") ("realgud/debugger/trepan3k" "realgud/debugger/trepan3k/*.el") ("realgud/debugger/trepanjs" "realgud/debugger/trepanjs/*.el") ("realgud/debugger/zshdb" "realgud/debugger/zshdb/*.el") ("realgud/lang" "realgud/lang/*.el") "realgud-pkg.el") :host github :repo "realgud/realgud" :package "realgud" :local-repo "realgud")) "load-relative" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "rocky/emacs-load-relative" :package "load-relative" :local-repo "emacs-load-relative")) "loc-changes" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("loc-changes.el" "loc-changes-pkg.el") :host github :repo "rocky/emacs-loc-changes" :package "loc-changes" :local-repo "emacs-loc-changes")) "test-simple" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "rocky/emacs-test-simple" :package "test-simple" :local-repo "emacs-test-simple")) "realgud-trepan-ni" ("2022-06-17 08:44:28" ("load-relative" "realgud" "emacs") (:type git :flavor melpa :files (:defaults ("trepan-ni" "trepan-ni/*.el") "realgud-trepan-ni-pkg.el") :host github :repo "realgud/realgud-trepan-ni" :package "realgud-trepan-ni" :local-repo "realgud-trepan-ni")) "dap-mode" ("2022-06-17 08:44:28" ("emacs" "dash" "lsp-mode" "bui" "f" "s" "lsp-treemacs" "posframe" "ht") (:type git :flavor melpa :files (:defaults "icons" "dap-mode-pkg.el") :host github :repo "emacs-lsp/dap-mode" :package "dap-mode" :local-repo "dap-mode")) "lsp-mode" ("2022-06-17 08:44:28" ("emacs" "dash" "f" "ht" "spinner" "markdown-mode" "lv") (:type git :flavor melpa :files (:defaults "clients/*.el" "lsp-mode-pkg.el") :host github :repo "emacs-lsp/lsp-mode" :package "lsp-mode" :local-repo "lsp-mode")) "ht" ("2022-06-17 08:44:28" ("dash") (:type git :flavor melpa :host github :repo "Wilfred/ht.el" :package "ht" :local-repo "ht.el")) "spinner" ("2022-06-17 08:44:28" ("emacs") (:type git :host github :repo "emacs-straight/spinner" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "spinner" :local-repo "spinner")) "markdown-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "jrblevin/markdown-mode" :package "markdown-mode" :local-repo "markdown-mode")) "bui" ("2022-06-17 08:44:28" ("emacs" "dash") (:type git :flavor melpa :host github :repo "alezost/bui.el" :package "bui" :local-repo "bui.el")) "lsp-treemacs" ("2022-06-17 08:44:28" ("emacs" "dash" "f" "ht" "treemacs" "lsp-mode") (:type git :flavor melpa :files (:defaults "icons" "lsp-treemacs-pkg.el") :host github :repo "emacs-lsp/lsp-treemacs" :package "lsp-treemacs" :local-repo "lsp-treemacs")) "treemacs" ("2022-06-17 08:44:28" ("emacs" "cl-lib" "dash" "s" "ace-window" "pfuture" "hydra" "ht" "cfrs") (:type git :flavor melpa :files (:defaults "Changelog.org" "icons" "src/elisp/treemacs*.el" "src/scripts/treemacs*.py" (:exclude "src/extra/*") "treemacs-pkg.el") :host github :repo "Alexander-Miller/treemacs" :package "treemacs" :local-repo "treemacs")) "pfuture" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "Alexander-Miller/pfuture" :package "pfuture" :local-repo "pfuture")) "cfrs" ("2022-06-17 08:44:28" ("emacs" "dash" "s" "posframe") (:type git :flavor melpa :host github :repo "Alexander-Miller/cfrs" :package "cfrs" :local-repo "cfrs")) "posframe" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "tumashu/posframe" :package "posframe" :local-repo "posframe")) "envrc" ("2022-06-17 08:44:28" ("seq" "emacs" "inheritenv") (:type git :flavor melpa :host github :repo "purcell/envrc" :package "envrc" :local-repo "envrc")) "inheritenv" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "purcell/inheritenv" :package "inheritenv" :local-repo "inheritenv")) "docker" ("2022-06-17 08:44:28" ("aio" "dash" "docker-tramp" "emacs" "json-mode" "s" "tablist" "transient") (:type git :flavor melpa :host github :repo "Silex/docker.el" :package "docker" :local-repo "docker.el")) "aio" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files ("aio.el" "README.md" "UNLICENSE" "aio-pkg.el") :host github :repo "skeeto/emacs-aio" :package "aio" :local-repo "emacs-aio")) "docker-tramp" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "emacs-pe/docker-tramp.el" :package "docker-tramp" :local-repo "docker-tramp.el")) "json-mode" ("2022-06-17 08:44:28" ("json-snatcher" "emacs") (:type git :flavor melpa :host github :repo "joshwnj/json-mode" :package "json-mode" :local-repo "json-mode")) "json-snatcher" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "Sterlingg/json-snatcher" :package "json-snatcher" :local-repo "json-snatcher")) "tablist" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "politza/tablist" :package "tablist" :local-repo "tablist")) "dockerfile-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "spotify/dockerfile-mode" :package "dockerfile-mode" :local-repo "dockerfile-mode")) "quickrun" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/quickrun" :package "quickrun" :local-repo "quickrun")) "eros" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "xiongtx/eros" :package "eros" :local-repo "eros")) "gist" ("2022-06-17 08:44:28" ("emacs" "gh") (:type git :flavor melpa :host github :repo "defunkt/gist.el" :package "gist" :local-repo "gist.el")) "gh" ("2022-06-17 08:44:28" ("emacs" "pcache" "logito" "marshal" "cl-lib") (:type git :flavor melpa :host github :repo "sigma/gh.el" :package "gh" :local-repo "gh.el")) "logito" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "sigma/logito" :package "logito" :local-repo "logito")) "marshal" ("2022-06-17 08:44:28" ("emacs" "ht") (:type git :flavor melpa :host github :repo "sigma/marshal.el" :package "marshal" :local-repo "marshal.el")) "dumb-jump" ("2022-06-17 08:44:28" ("emacs" "s" "dash" "popup") (:type git :flavor melpa :host github :repo "jacktasia/dumb-jump" :package "dumb-jump" :local-repo "dumb-jump")) "ivy-xref" ("2022-06-17 08:44:28" ("emacs" "ivy") (:type git :flavor melpa :host github :repo "alexmurray/ivy-xref" :package "ivy-xref" :local-repo "ivy-xref")) "request" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files ("request.el" "request-pkg.el") :host github :repo "tkf/emacs-request" :package "request" :local-repo "emacs-request")) "lsp-ui" ("2022-06-17 08:44:28" ("emacs" "dash" "lsp-mode" "markdown-mode") (:type git :flavor melpa :files (:defaults "lsp-ui-doc.html" "resources" "lsp-ui-pkg.el") :host github :repo "emacs-lsp/lsp-ui" :package "lsp-ui" :local-repo "lsp-ui")) "lsp-ivy" ("2022-06-17 08:44:28" ("emacs" "dash" "lsp-mode" "ivy") (:type git :flavor melpa :host github :repo "emacs-lsp/lsp-ivy" :package "lsp-ivy" :local-repo "lsp-ivy")) "magit" ("2022-06-17 08:44:28" ("emacs" "compat" "dash" "git-commit" "magit-section" "transient" "with-editor") (:flavor melpa :files ("lisp/magit" "lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "Documentation/magit.texi" "Documentation/AUTHORS.md" "magit-pkg.el") :package "magit" :local-repo "magit" :type git :repo "magit/magit" :host github)) "magit-section" ("2022-06-17 08:44:28" ("emacs" "compat" "dash") (:flavor melpa :files ("lisp/magit-section.el" "lisp/magit-section-pkg.el" "docs/magit-section.texi" "Documentation/magit-section.texi" "magit-section-pkg.el") :package "magit-section" :local-repo "magit" :type git :repo "magit/magit" :host github)) "magit-gitflow" ("2022-06-17 08:44:28" ("magit" "magit-popup") (:type git :flavor melpa :host github :repo "jtatarik/magit-gitflow" :package "magit-gitflow" :local-repo "magit-gitflow")) "magit-popup" ("2022-06-17 08:44:28" ("emacs" "dash") (:type git :flavor melpa :host github :repo "magit/magit-popup" :package "magit-popup" :local-repo "magit-popup")) "magit-todos" ("2022-06-17 08:44:28" ("emacs" "async" "dash" "f" "hl-todo" "magit" "pcre2el" "s" "transient") (:type git :flavor melpa :host github :repo "alphapapa/magit-todos" :package "magit-todos" :local-repo "magit-todos")) "code-review" ("2022-06-17 08:44:28" ("emacs" "closql" "magit" "a" "ghub" "uuidgen" "deferred" "markdown-mode" "forge" "emojify") (:files ("graphql" "code-review*.el") :flavor melpa :repo "wandersoncferreira/code-review" :host github :package "code-review" :type git :local-repo "code-review")) "closql" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "emacscollective/closql" :package "closql" :local-repo "closql")) "a" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "plexus/a.el" :package "a" :local-repo "a.el")) "ghub" ("2022-06-17 08:44:28" ("emacs" "compat" "let-alist" "treepy") (:type git :flavor melpa :host github :repo "magit/ghub" :package "ghub" :local-repo "ghub")) "treepy" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "volrath/treepy.el" :package "treepy" :local-repo "treepy.el")) "uuidgen" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "kanru/uuidgen-el" :package "uuidgen" :local-repo "uuidgen-el")) "deferred" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files ("deferred.el" "deferred-pkg.el") :host github :repo "kiwanami/emacs-deferred" :package "deferred" :local-repo "emacs-deferred")) "forge" ("2022-06-17 08:44:28" ("emacs" "compat" "closql" "dash" "emacsql-sqlite" "ghub" "let-alist" "magit" "markdown-mode" "transient" "yaml") (:type git :flavor melpa :host github :repo "magit/forge" :package "forge" :local-repo "forge")) "emacsql-sqlite" ("2022-06-17 08:44:28" ("emacs" "emacsql") (:type git :flavor melpa :files ("emacsql-sqlite.el" "sqlite" "emacsql-sqlite-pkg.el") :host github :repo "skeeto/emacsql" :package "emacsql-sqlite" :local-repo "emacsql")) "emacsql" ("2022-06-17 08:44:28" ("emacs") (:flavor melpa :files ("emacsql.el" "emacsql-compiler.el" "emacsql-system.el" "README.md" "emacsql-pkg.el") :package "emacsql" :local-repo "emacsql" :type git :repo "skeeto/emacsql" :host github)) "yaml" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "zkry/yaml.el" :package "yaml" :local-repo "yaml.el")) "emojify" ("2022-06-17 08:44:28" ("seq" "ht" "emacs") (:type git :flavor melpa :files (:defaults "data" "images" "emojify-pkg.el") :host github :repo "iqbalansari/emacs-emojify" :package "emojify" :local-repo "emacs-emojify")) "makefile-executor" ("2022-06-17 08:44:28" ("emacs" "dash" "f" "s") (:type git :flavor melpa :host github :repo "thiderman/makefile-executor.el" :package "makefile-executor" :local-repo "makefile-executor.el")) "pdf-tools" ("2022-06-17 08:44:28" ("emacs" "nadvice" "tablist" "let-alist") (:type git :flavor melpa :files (:defaults "README" ("build" "Makefile") ("build" "server") "pdf-tools-pkg.el") :host github :repo "vedang/pdf-tools" :package "pdf-tools" :local-repo "pdf-tools")) "saveplace-pdf-view" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "nicolaisingh/saveplace-pdf-view" :package "saveplace-pdf-view" :local-repo "saveplace-pdf-view")) "rainbow-mode" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/rainbow-mode" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "rainbow-mode" :local-repo "rainbow-mode")) "kurecolor" ("2022-06-17 08:44:28" ("emacs" "s") (:type git :flavor melpa :host github :repo "emacsfodder/kurecolor" :package "kurecolor" :local-repo "kurecolor")) "taskrunner" ("2022-06-17 08:44:28" ("emacs" "projectile" "async") (:type git :flavor melpa :host github :repo "emacs-taskrunner/emacs-taskrunner" :package "taskrunner" :local-repo "emacs-taskrunner")) "ivy-taskrunner" ("2022-06-17 08:44:28" ("emacs" "projectile" "ivy") (:host github :repo "emacs-taskrunner/ivy-taskrunner" :package "ivy-taskrunner" :type git :local-repo "ivy-taskrunner")) "osx-trash" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files (:defaults "*.AppleScript" "osx-trash-pkg.el") :host github :repo "emacsorphanage/osx-trash" :package "osx-trash" :local-repo "osx-trash")) "ns-auto-titlebar" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "purcell/ns-auto-titlebar" :package "ns-auto-titlebar" :local-repo "ns-auto-titlebar")) "xclip" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/xclip" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "xclip" :local-repo "xclip")) "evil-terminal-cursor-changer" ("2022-06-17 08:44:28" ("evil") (:host github :repo "kisaragi-hiu/evil-terminal-cursor-changer" :flavor melpa :package "evil-terminal-cursor-changer" :type git :local-repo "evil-terminal-cursor-changer")) "elm-mode" ("2022-06-17 08:44:28" ("f" "s" "emacs" "seq" "reformatter") (:type git :flavor melpa :files (:defaults "elm.tags" "elm-mode-pkg.el") :host github :repo "jcollard/elm-mode" :package "elm-mode" :local-repo "elm-mode")) "reformatter" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "purcell/emacs-reformatter" :package "reformatter" :local-repo "emacs-reformatter")) "flycheck-elm" ("2022-06-17 08:44:28" ("flycheck" "emacs" "let-alist" "seq") (:type git :flavor melpa :host github :repo "bsermons/flycheck-elm" :package "flycheck-elm" :local-repo "flycheck-elm")) "highlight-quoted" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "Fanael/highlight-quoted" :package "highlight-quoted" :local-repo "highlight-quoted")) "macrostep" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "joddie/macrostep" :package "macrostep" :local-repo "macrostep")) "overseer" ("2022-06-17 08:44:28" ("emacs" "dash" "pkg-info" "f") (:type git :flavor melpa :host github :repo "tonini/overseer.el" :package "overseer" :local-repo "overseer.el")) "elisp-def" ("2022-06-17 08:44:28" ("dash" "f" "s" "emacs") (:type git :flavor melpa :host github :repo "Wilfred/elisp-def" :package "elisp-def" :local-repo "elisp-def")) "elisp-demos" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files (:defaults "*.org" "elisp-demos-pkg.el") :host github :repo "xuchunyang/elisp-demos" :package "elisp-demos" :local-repo "elisp-demos")) "flycheck-package" ("2022-06-17 08:44:28" ("emacs" "flycheck" "package-lint") (:type git :flavor melpa :host github :repo "purcell/flycheck-package" :package "flycheck-package" :local-repo "flycheck-package")) "package-lint" ("2022-06-17 08:44:28" ("cl-lib" "emacs" "let-alist") (:type git :flavor melpa :files (:defaults "data" (:exclude "*flymake.el") "package-lint-pkg.el") :host github :repo "purcell/package-lint" :package "package-lint" :local-repo "package-lint")) "flycheck-cask" ("2022-06-17 08:44:28" ("emacs" "flycheck" "dash") (:type git :flavor melpa :host github :repo "flycheck/flycheck-cask" :package "flycheck-cask" :local-repo "flycheck-cask")) "buttercup" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :files (:defaults "bin" "buttercup-pkg.el") :host github :repo "jorgenschaefer/emacs-buttercup" :package "buttercup" :local-repo "emacs-buttercup")) "hy-mode" ("2022-06-17 08:44:28" ("dash" "s" "emacs") (:type git :flavor melpa :host github :repo "hylang/hy-mode" :package "hy-mode" :local-repo "hy-mode")) "counsel-jq" ("2022-06-17 08:44:28" ("swiper" "ivy" "emacs") (:type git :flavor melpa :host github :repo "200ok-ch/counsel-jq" :package "counsel-jq" :local-repo "counsel-jq")) "rjsx-mode" ("2022-06-17 08:44:28" ("emacs" "js2-mode") (:type git :flavor melpa :host github :repo "felipeochoa/rjsx-mode" :package "rjsx-mode" :local-repo "rjsx-mode")) "js2-mode" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "mooz/js2-mode" :package "js2-mode" :local-repo "js2-mode")) "typescript-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "emacs-typescript/typescript.el" :package "typescript-mode" :local-repo "typescript.el")) "js2-refactor" ("2022-06-17 08:44:28" ("js2-mode" "s" "multiple-cursors" "dash" "s" "yasnippet") (:type git :flavor melpa :host github :repo "js-emacs/js2-refactor.el" :package "js2-refactor" :local-repo "js2-refactor.el")) "multiple-cursors" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "magnars/multiple-cursors.el" :package "multiple-cursors" :local-repo "multiple-cursors.el")) "npm-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "mojochao/npm-mode" :package "npm-mode" :local-repo "npm-mode")) "add-node-modules-path" ("2022-06-17 08:44:28" ("s") (:type git :flavor melpa :host github :repo "codesuki/add-node-modules-path" :package "add-node-modules-path" :local-repo "add-node-modules-path")) "nodejs-repl" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "abicky/nodejs-repl.el" :package "nodejs-repl" :local-repo "nodejs-repl.el")) "skewer-mode" ("2022-06-17 08:44:28" ("simple-httpd" "js2-mode" "emacs") (:type git :flavor melpa :files ("*.html" "*.js" "*.el" "skewer-mode-pkg.el") :host github :repo "skeeto/skewer-mode" :package "skewer-mode" :local-repo "skewer-mode")) "simple-httpd" ("2022-06-17 08:44:28" ("cl-lib") (:type git :flavor melpa :host github :repo "skeeto/emacs-web-server" :package "simple-httpd" :local-repo "emacs-web-server")) "tide" ("2022-06-17 08:44:28" ("emacs" "dash" "s" "flycheck" "typescript-mode" "cl-lib") (:type git :flavor melpa :files (:defaults "tsserver" "tide-pkg.el") :host github :repo "ananthakumaran/tide" :package "tide" :local-repo "tide")) "xref-js2" ("2022-06-17 08:44:28" ("emacs" "js2-mode") (:type git :flavor melpa :host github :repo "js-emacs/xref-js2" :package "xref-js2" :local-repo "xref-js2")) "auctex" ("2022-06-17 08:44:28" ("emacs") (:files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :repo "emacs-straight/auctex" :host github :package "auctex" :type git :local-repo "auctex")) "latex-preview-pane" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("*.el" "*.txt" "latex-preview-pane-pkg.el") :host github :repo "jsinglet/latex-preview-pane" :package "latex-preview-pane" :local-repo "latex-preview-pane")) "evil-tex" ("2022-06-17 08:44:28" ("emacs" "evil" "auctex") (:type git :flavor melpa :host github :repo "iyefrat/evil-tex" :package "evil-tex" :local-repo "evil-tex")) "company-auctex" ("2022-06-17 08:44:28" ("yasnippet" "company" "auctex") (:type git :flavor melpa :host github :repo "alexeyr/company-auctex" :package "company-auctex" :local-repo "company-auctex")) "company-reftex" ("2022-06-17 08:44:28" ("emacs" "s" "company") (:type git :flavor melpa :host github :repo "TheBB/company-reftex" :package "company-reftex" :local-repo "company-reftex")) "company-math" ("2022-06-17 08:44:28" ("company" "math-symbol-lists") (:type git :flavor melpa :host github :repo "vspinu/company-math" :package "company-math" :local-repo "company-math")) "math-symbol-lists" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "vspinu/math-symbol-lists" :package "math-symbol-lists" :local-repo "math-symbol-lists")) "markdown-toc" ("2022-06-17 08:44:28" ("s" "dash" "markdown-mode") (:type git :flavor melpa :host github :repo "ardumont/markdown-toc" :package "markdown-toc" :local-repo "markdown-toc")) "edit-indirect" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "Fanael/edit-indirect" :package "edit-indirect" :local-repo "edit-indirect")) "evil-markdown" ("2022-06-17 08:44:28" nil (:host github :repo "Somelauw/evil-markdown" :package "evil-markdown" :type git :local-repo "evil-markdown")) "org" ("2022-06-17 08:44:28" ("emacs") (:host github :repo "emacs-straight/org-mode" :files (:defaults "etc") :depth 1 :build t :pre-build (with-temp-file "org-version.el" (let ((version (with-temp-buffer (insert-file-contents (doom-path "lisp/org.el") nil 0 1024) (if (re-search-forward "^;; Version: \\([^
-]+\\)" nil t) (match-string-no-properties 1) "Unknown")))) (insert (format "(defun org-release () %S)
" version) (format "(defun org-git-version (&rest _) \"%s-??-%s\")
" version (cdr (doom-call-process "git" "rev-parse" "--short" "HEAD"))) "(provide 'org-version)
"))) :local-repo "org" :package "org" :type git)) "org-contrib" ("2022-06-17 08:44:28" ("emacs" "org") (:host github :repo "emacsmirror/org-contrib" :files (:defaults "lisp/*.el") :package "org-contrib" :type git :local-repo "org-contrib")) "htmlize" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "hniksic/emacs-htmlize" :package "htmlize" :local-repo "emacs-htmlize")) "org-yt" ("2022-06-17 08:44:28" nil (:host github :repo "TobiasZawada/org-yt" :package "org-yt" :type git :local-repo "org-yt")) "ox-clip" ("2022-06-17 08:44:28" ("org" "htmlize") (:type git :flavor melpa :host github :repo "jkitchin/ox-clip" :package "ox-clip" :local-repo "ox-clip")) "toc-org" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "snosov1/toc-org" :package "toc-org" :local-repo "toc-org")) "org-cliplink" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "rexim/org-cliplink" :package "org-cliplink" :local-repo "org-cliplink")) "evil-org" ("2022-06-17 08:44:28" ("emacs" "evil") (:host github :repo "hlissner/evil-org-mode" :flavor melpa :package "evil-org" :type git :local-repo "evil-org-mode")) "org-pdftools" ("2022-06-17 08:44:28" ("emacs" "org" "pdf-tools" "org-noter") (:type git :flavor melpa :files ("org-pdftools.el" "org-pdftools-pkg.el") :host github :repo "fuxialexander/org-pdftools" :package "org-pdftools" :local-repo "org-pdftools")) "org-noter" ("2022-06-17 08:44:28" ("emacs" "cl-lib" "org") (:type git :flavor melpa :host github :repo "weirdNox/org-noter" :package "org-noter" :local-repo "org-noter")) "orgit" ("2022-06-17 08:44:28" ("emacs" "magit" "org") (:type git :flavor melpa :host github :repo "magit/orgit" :package "orgit" :local-repo "orgit")) "ob-async" ("2022-06-17 08:44:28" ("async" "org" "emacs" "dash") (:type git :flavor melpa :host github :repo "astahlman/ob-async" :package "ob-async" :local-repo "ob-async")) "ob-hy" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "brantou/ob-hy" :package "ob-hy" :local-repo "ob-hy")) "ob-restclient" ("2022-06-17 08:44:28" ("restclient") (:type git :flavor melpa :host github :repo "alf/ob-restclient.el" :package "ob-restclient" :local-repo "ob-restclient.el")) "restclient" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("restclient.el" "restclient-pkg.el") :host github :repo "pashky/restclient.el" :package "restclient" :local-repo "restclient.el")) "ox-rst" ("2022-06-17 08:44:28" ("emacs" "org") (:type git :flavor melpa :host github :repo "msnoigrs/ox-rst" :package "ox-rst" :local-repo "ox-rst")) "pip-requirements" ("2022-06-17 08:44:28" ("dash") (:type git :flavor melpa :host github :repo "Wilfred/pip-requirements.el" :package "pip-requirements" :local-repo "pip-requirements.el")) "lsp-pyright" ("2022-06-17 08:44:28" ("emacs" "lsp-mode" "dash" "ht") (:type git :flavor melpa :host github :repo "emacs-lsp/lsp-pyright" :package "lsp-pyright" :local-repo "lsp-pyright")) "anaconda-mode" ("2022-06-17 08:44:28" ("emacs" "pythonic" "dash" "s" "f") (:type git :flavor melpa :files (:defaults "anaconda-mode.py" "anaconda-mode-pkg.el") :host github :repo "pythonic-emacs/anaconda-mode" :package "anaconda-mode" :local-repo "anaconda-mode")) "pythonic" ("2022-06-17 08:44:28" ("emacs" "s" "f") (:type git :flavor melpa :host github :repo "pythonic-emacs/pythonic" :package "pythonic" :local-repo "pythonic")) "company-anaconda" ("2022-06-17 08:44:28" ("company" "anaconda-mode" "cl-lib" "dash" "s") (:type git :flavor melpa :host github :repo "pythonic-emacs/company-anaconda" :package "company-anaconda" :local-repo "company-anaconda")) "pipenv" ("2022-06-17 08:44:28" ("emacs" "s" "pyvenv") (:type git :flavor melpa :host github :repo "pwalsh/pipenv.el" :package "pipenv" :local-repo "pipenv.el")) "pyvenv" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "jorgenschaefer/pyvenv" :package "pyvenv" :local-repo "pyvenv")) "pyenv-mode" ("2022-06-17 08:44:28" ("pythonic") (:type git :flavor melpa :host github :repo "pythonic-emacs/pyenv-mode" :package "pyenv-mode" :local-repo "pyenv-mode")) "nose" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacsattic/nose" :package "nose" :local-repo "nose")) "python-pytest" ("2022-06-17 08:44:28" ("emacs" "dash" "transient" "projectile" "s") (:type git :flavor melpa :host github :repo "wbolster/emacs-python-pytest" :package "python-pytest" :local-repo "emacs-python-pytest")) "pyimport" ("2022-06-17 08:44:28" ("dash" "s" "shut-up") (:type git :flavor melpa :host github :repo "Wilfred/pyimport" :package "pyimport" :local-repo "pyimport")) "shut-up" ("2022-06-17 08:44:28" ("cl-lib" "emacs") (:type git :flavor melpa :host github :repo "cask/shut-up" :package "shut-up" :local-repo "shut-up")) "py-isort" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "paetzke/py-isort.el" :package "py-isort" :local-repo "py-isort.el")) "qml-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "coldnew/qml-mode" :package "qml-mode" :local-repo "qml-mode")) "qt-pro-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "EricCrosson/qt-pro-mode" :package "qt-pro-mode" :local-repo "qt-pro-mode")) "company-restclient" ("2022-06-17 08:44:28" ("cl-lib" "company" "emacs" "know-your-http-well" "restclient") (:type git :flavor melpa :host github :repo "iquiw/company-restclient" :package "company-restclient" :local-repo "company-restclient")) "know-your-http-well" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("emacs/*.el" "know-your-http-well-pkg.el") :host github :repo "for-GET/know-your-http-well" :package "know-your-http-well" :local-repo "know-your-http-well")) "sphinx-mode" ("2022-06-17 08:44:28" ("f" "dash") (:type git :flavor melpa :host github :repo "Fuco1/sphinx-mode" :package "sphinx-mode" :local-repo "sphinx-mode")) "rustic" ("2022-06-17 08:44:28" ("emacs" "rust-mode" "dash" "f" "let-alist" "markdown-mode" "project" "s" "seq" "spinner" "xterm-color") (:type git :flavor melpa :host github :repo "brotzeit/rustic" :package "rustic" :local-repo "rustic")) "rust-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "rust-lang/rust-mode" :package "rust-mode" :local-repo "rust-mode")) "xterm-color" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "atomontage/xterm-color" :package "xterm-color" :local-repo "xterm-color")) "racer" ("2022-06-17 08:44:28" ("emacs" "rust-mode" "dash" "s" "f" "pos-tip") (:type git :flavor melpa :host github :repo "racer-rust/emacs-racer" :package "racer" :local-repo "emacs-racer")) "pos-tip" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "pitkali/pos-tip" :package "pos-tip" :local-repo "pos-tip")) "company-shell" ("2022-06-17 08:44:28" ("emacs" "company" "dash" "cl-lib") (:type git :flavor melpa :host github :repo "Alexander-Miller/company-shell" :package "company-shell" :local-repo "company-shell")) "emmet-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "smihica/emmet-mode" :package "emmet-mode" :local-repo "emmet-mode")) "haml-mode" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "nex3/haml-mode" :package "haml-mode" :local-repo "haml-mode")) "pug-mode" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/emacs-pug-mode" :package "pug-mode" :local-repo "emacs-pug-mode")) "slim-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "slim-template/emacs-slim" :package "slim-mode" :local-repo "emacs-slim")) "web-mode" ("2022-06-17 08:44:28" ("emacs") (:type git :flavor melpa :host github :repo "fxbois/web-mode" :package "web-mode" :local-repo "web-mode")) "company-web" ("2022-06-17 08:44:28" ("company" "dash" "cl-lib" "web-completion-data") (:type git :flavor melpa :host github :repo "osv/company-web" :package "company-web" :local-repo "company-web")) "web-completion-data" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("*.el" "html-stuff" "web-completion-data-pkg.el") :host github :repo "osv/web-completion-data" :package "web-completion-data" :local-repo "web-completion-data")) "sass-mode" ("2022-06-17 08:44:28" ("haml-mode" "cl-lib") (:type git :flavor melpa :host github :repo "nex3/sass-mode" :package "sass-mode" :local-repo "sass-mode")) "stylus-mode" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("stylus-mode.el" "stylus-mode-pkg.el") :host github :repo "brianc/jade-mode" :package "stylus-mode" :local-repo "jade-mode")) "sws-mode" ("2022-06-17 08:44:28" nil (:flavor melpa :files ("sws-mode.el" "sws-mode-pkg.el") :package "sws-mode" :local-repo "jade-mode" :type git :repo "brianc/jade-mode" :host github)) "counsel-css" ("2022-06-17 08:44:28" ("emacs" "counsel" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/emacs-counsel-css" :package "counsel-css" :local-repo "emacs-counsel-css")) "apel" ("2022-06-17 08:44:28" ("emacs") (:branch "apel-wl" :files ("alist.el" "apel-ver.el" "apel-pkg.el" "broken.el" "calist.el" "emu.el" "filename.el" "install.el" "inv-23.el" "invisible.el" "mcharset.el" "mcs-20.el" "mcs-e20.el" "mule-caesar.el" "path-util.el" "pccl-20.el" "pccl.el" "pces-20.el" "pces-e20.el" "pces.el" "pcustom.el" "poe.el" "poem-e20.el" "poem-e20_3.el" "poem.el" "product.el" "pym.el" "richtext.el" "static.el" "apel-pkg.el") :flavor melpa :repo "wanderlust/apel" :host github :package "apel" :type git :local-repo "apel")) "flim" ("2022-06-17 08:44:28" ("emacs" "apel" "oauth2") (:branch "flim-1_14-wl" :files ("*.texi" "*.el" (:exclude "md5-dl.el" "md5-el.el" "mel-b-dl.el" "sha1-dl.el" "smtpmail.el") "flim-pkg.el") :flavor melpa :repo "wanderlust/flim" :host github :package "flim" :type git :local-repo "flim")) "oauth2" ("2022-06-17 08:44:28" ("cl-lib" "nadvice") (:type git :host github :repo "emacs-straight/oauth2" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "oauth2" :local-repo "oauth2")) "semi" ("2022-06-17 08:44:28" ("emacs" "apel" "flim") (:branch "semi-1_14-wl" :flavor melpa :repo "wanderlust/semi" :host github :package "semi" :type git :local-repo "semi")) "wanderlust" ("2022-06-17 08:44:28" ("emacs" "apel" "flim" "semi") (:type git :flavor melpa :files ("doc/wl.texi" "doc/wl-ja.texi" "elmo/*.el" "wl/*.el" "etc/icons" (:exclude "elmo/elmo-database.el" "elmo/utf7.el" "wl/wl-dnd.el" "wl/wl-mule.el" "wl/wl-xmas.el") "wanderlust-pkg.el") :host github :repo "wanderlust/wanderlust" :package "wanderlust" :local-repo "wanderlust")) "calfw" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :files ("calfw.el" "calfw-pkg.el") :host github :repo "kiwanami/emacs-calfw" :package "calfw" :local-repo "emacs-calfw")) "calfw-org" ("2022-06-17 08:44:28" nil (:flavor melpa :files ("calfw-org.el" "calfw-org-pkg.el") :package "calfw-org" :local-repo "emacs-calfw" :type git :repo "kiwanami/emacs-calfw" :host github)) "calfw-cal" ("2022-06-17 08:44:28" nil (:flavor melpa :files ("calfw-cal.el" "calfw-cal-pkg.el") :package "calfw-cal" :local-repo "emacs-calfw" :type git :repo "kiwanami/emacs-calfw" :host github)) "calfw-ical" ("2022-06-17 08:44:28" nil (:flavor melpa :files ("calfw-ical.el" "calfw-ical-pkg.el") :package "calfw-ical" :local-repo "emacs-calfw" :type git :repo "kiwanami/emacs-calfw" :host github)) "org-gcal" ("2022-06-17 08:44:28" ("request" "request-deferred" "alert" "persist" "emacs" "org") (:type git :flavor melpa :host github :repo "kidd/org-gcal.el" :package "org-gcal" :local-repo "org-gcal.el")) "request-deferred" ("2022-06-17 08:44:28" ("emacs" "deferred" "request") (:flavor melpa :files ("request-deferred.el" "request-deferred-pkg.el") :package "request-deferred" :local-repo "emacs-request" :type git :repo "tkf/emacs-request" :host github)) "alert" ("2022-06-17 08:44:28" ("gntp" "log4e" "cl-lib") (:type git :flavor melpa :host github :repo "jwiegley/alert" :package "alert" :local-repo "alert")) "gntp" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "tekai/gntp.el" :package "gntp" :local-repo "gntp.el")) "log4e" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "aki2o/log4e" :package "log4e" :local-repo "log4e")) "persist" ("2022-06-17 08:44:28" nil (:type git :host github :repo "emacs-straight/persist" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style") :package "persist" :local-repo "persist")) "circe" ("2022-06-17 08:44:28" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "emacs-circe/circe" :package "circe" :local-repo "circe")) "circe-notifications" ("2022-06-17 08:44:28" ("emacs" "circe" "alert") (:type git :flavor melpa :host github :repo "eqyiel/circe-notifications" :package "circe-notifications" :local-repo "circe-notifications")) "drag-stuff" ("2022-06-17 08:44:28" nil (:type git :flavor melpa :host github :repo "rejeep/drag-stuff.el" :package "drag-stuff" :local-repo "drag-stuff.el")) "link-hint" ("2022-06-17 08:44:28" ("avy" "emacs") (:type git :flavor melpa :host github :repo "noctuid/link-hint.el" :package "link-hint" :local-repo "link-hint.el"))))

#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ())

#s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (org-elpa #s(hash-table size 325 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 13 "auto-minor-mode" nil "gcmh" nil "explain-pause-mode" nil "straight" nil "use-package" nil "all-the-icons" nil "hide-mode-line" nil "highlight-numbers" nil "rainbow-delimiters" nil "restart-emacs" nil "better-jumper" nil "dtrt-indent" nil "helpful" nil "pcre2el" nil "smartparens" nil "ws-butler" nil "projectile" nil "project" nil "general" nil "which-key" nil "pyim" nil "fcitx" nil "ace-pinyin" nil "pangu-spacing" nil "company" nil "company-dict" nil "flx-ido" nil "ido-completing-read+" nil "ido-sort-mtime" nil "ido-vertical-mode" nil "crm-custom" nil "swiper" nil "amx" nil "counsel-projectile" nil "ivy-rich" nil "wgrep" nil "doom-themes" nil "solaire-mode" nil "hl-todo" nil "highlight-indent-guides" nil "minimap" nil "doom-modeline" nil "anzu" nil "evil-anzu" nil "nav-flash" nil "neotree" nil "evil-goggles" nil "centaur-tabs" nil "unicode-fonts" nil "git-gutter-fringe" nil "vi-tilde-fringe" nil "ace-window" nil "persp-mode" nil "evil" nil "evil-args" nil "evil-easymotion" nil "evil-embrace" nil "evil-escape" nil "evil-exchange" nil "evil-indent-plus" nil "evil-lion" nil "evil-nerd-commenter" nil "evil-numbers" nil "evil-snipe" nil "evil-surround" nil "evil-textobj-anyblock" nil "evil-traces" nil "evil-visualstar" nil "exato" nil "evil-quick-diff" nil "evil-collection" nil "yasnippet" nil "vimish-fold" nil "evil-vimish-fold" nil "evil-multiedit" nil "evil-mc" nil "parinfer-rust-mode" nil "auto-yasnippet" nil "doom-snippets" nil "adaptive-wrap" nil "diredfl" nil "dired-git-info" nil "diff-hl" nil "dired-rsync" nil "fd-dired" nil "ibuffer-projectile" nil "ibuffer-vc" nil "undo-fu" nil "undo-fu-session" nil "browse-at-remote" nil "git-commit" nil "git-timemachine" nil "git-modes" nil "multi-term" nil "vterm" nil "flycheck" nil "flycheck-popup-tip" nil "flyspell-correct" nil "flyspell-lazy" nil "langtool" nil "writegood-mode" nil "ansible" nil "ansible-doc" nil "jinja2-mode" nil "yaml-mode" nil "company-ansible" nil "realgud" nil "realgud-trepan-ni" nil "dap-mode" nil "posframe" nil "envrc" nil "docker" nil "docker-tramp" nil "dockerfile-mode" nil "quickrun" nil "eros" nil "gist" nil "dumb-jump" nil "ivy-xref" nil "request" nil "lsp-mode" nil "lsp-ui" nil "lsp-ivy" nil "magit" nil "magit-gitflow" nil "magit-todos" nil "code-review" nil "makefile-executor" nil "pdf-tools" nil "saveplace-pdf-view" nil "rainbow-mode" nil "kurecolor" nil "taskrunner" nil "ivy-taskrunner" nil "osx-trash" nil "ns-auto-titlebar" nil "xclip" nil "evil-terminal-cursor-changer" nil "elm-mode" nil "flycheck-elm" nil "highlight-quoted" nil "macrostep" nil "overseer" nil "elisp-def" nil "elisp-demos" nil "flycheck-package" nil "flycheck-cask" nil "buttercup" nil "hy-mode" nil "json-mode" nil "json-snatcher" nil "counsel-jq" nil "rjsx-mode" nil "typescript-mode" nil "js2-refactor" nil "npm-mode" nil "add-node-modules-path" nil "nodejs-repl" nil "skewer-mode" nil "tide" nil "xref-js2" nil "auctex" nil "latex-preview-pane" nil "evil-tex" nil "company-auctex" nil "company-reftex" nil "company-math" nil "markdown-mode" nil "markdown-toc" nil "edit-indirect" nil "evil-markdown" nil "org" (org :type git :repo "emacs-straight/org-mode" :local-repo "org" :depth 1 :pre-build (with-temp-file "org-version.el" (let ((version (with-temp-buffer (insert-file-contents (doom-path "lisp/org.el") nil 0 1024) (if (re-search-forward "^;; Version: \\([^
-]+\\)" nil t) (match-string-no-properties 1) "Unknown")))) (insert (format "(defun org-release () %S)
" version) (format "(defun org-git-version (&rest _) \"%s-??-%s\")
" version (cdr (doom-call-process "git" "rev-parse" "--short" "HEAD"))) "(provide 'org-version)
"))) :build t :files (:defaults "etc") :host github) "org-contrib" (org-contrib :type git :includes (ob-arduino ob-clojure-literate ob-csharp ob-eukleides ob-fomus ob-julia ob-mathematica ob-mathomatic ob-oz ob-php ob-redis ob-sclang ob-smiles ob-spice ob-stata ob-tcl ob-vbnet ol-bookmark ol-elisp-symbol ol-git-link ol-man ol-mew ol-notmuch ol-vm ol-wl org-annotate-file org-attach-embedded-images org-bibtex-extras org-checklist org-choose org-collector org-contacts org-contribdir org-depend org-effectiveness org-eldoc org-eval org-eval-light org-expiry org-interactive-query org-invoice org-learn org-license org-mac-iCal org-mac-link org-mairix org-notify org-panel org-passwords org-registry org-screen org-screenshot org-secretary org-static-mathjax org-sudoku orgtbl-sqlinsert org-toc org-track org-velocity org-wikinodes ox-bibtex ox-confluence ox-deck ox-extra ox-freemind ox-groff ox-koma-letter ox-rss ox-s5 ox-taskjuggler) :repo "emacsmirror/org-contrib" :files (:defaults "lisp/*.el") :host github) "avy" nil "htmlize" nil "org-yt" nil "ox-clip" nil "toc-org" nil "org-cliplink" nil "evil-org" nil "org-pdftools" nil "orgit" nil "ob-async" nil "ob-hy" nil "ob-restclient" nil "ox-rst" nil "pip-requirements" nil "lsp-pyright" nil "anaconda-mode" nil "company-anaconda" nil "pipenv" nil "pyvenv" nil "pyenv-mode" nil "nose" nil "python-pytest" nil "pyimport" nil "py-isort" nil "qml-mode" nil "qt-pro-mode" nil "restclient" nil "company-restclient" nil "sphinx-mode" nil "rustic" nil "racer" nil "company-shell" nil "emmet-mode" nil "haml-mode" nil "pug-mode" nil "slim-mode" nil "web-mode" nil "company-web" nil "sass-mode" nil "stylus-mode" nil "sws-mode" nil "counsel-css" nil "apel" nil "flim" nil "semi" nil "wanderlust" nil "calfw" nil "calfw-org" nil "calfw-cal" nil "calfw-ical" nil "org-gcal" nil "circe" nil "circe-notifications" nil "drag-stuff" nil "link-hint" nil "parent-mode" nil "dash" nil "s" nil "f" nil "elisp-refs" nil "cl-lib" nil "xref" nil "async" nil "xr" nil "pinyinlib" nil "flx" nil "seq" nil "memoize" nil "hydra" nil "lv" nil "shrink-path" nil "goto-chg" nil "powerline" nil "font-utils" nil "persistent-soft" nil "pcache" nil "list-utils" nil "ucs-utils" nil "git-gutter" nil "fringe-helper" nil "embrace" nil "expand-region" nil "annalist" nil "iedit" nil "compat" nil "transient" nil "with-editor" nil "pkg-info" nil "epl" nil "popup" nil "load-relative" nil "loc-changes" nil "test-simple" nil "ht" nil "spinner" nil "bui" nil "lsp-treemacs" nil "treemacs" nil "pfuture" nil "cfrs" nil "inheritenv" nil "aio" nil "tablist" nil "gh" nil "logito" nil "marshal" nil "magit-section" nil "magit-popup" nil "closql" nil "a" nil "ghub" nil "treepy" nil "uuidgen" nil "deferred" nil "forge" nil "emacsql-sqlite" nil "emacsql" nil "yaml" nil "emojify" nil "reformatter" nil "package-lint" nil "js2-mode" nil "multiple-cursors" nil "simple-httpd" nil "math-symbol-lists" nil "org-noter" nil "pythonic" nil "shut-up" nil "know-your-http-well" nil "rust-mode" nil "xterm-color" nil "pos-tip" nil "web-completion-data" nil "oauth2" nil "request-deferred" nil "alert" nil "gntp" nil "log4e" nil "persist" nil "melpa" nil "gnu-elpa-mirror" nil "el-get" nil "emacsmirror-mirror" nil "ivy" nil "ivy-hydra" nil "ivy-avy" nil "counsel" nil "flyspell-correct-ivy" nil "bind-key" nil)) melpa #s(hash-table size 325 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "auto-minor-mode" (auto-minor-mode :type git :flavor melpa :host github :repo "joewreschnig/auto-minor-mode") "gcmh" (gcmh :type git :flavor melpa :host gitlab :repo "koral/gcmh") "explain-pause-mode" nil "straight" nil "use-package" (use-package :type git :flavor melpa :files (:defaults (:exclude "bind-key.el" "bind-chord.el" "use-package-chords.el" "use-package-ensure-system-package.el") "use-package-pkg.el") :host github :repo "jwiegley/use-package") "all-the-icons" (all-the-icons :type git :flavor melpa :files (:defaults "data" "all-the-icons-pkg.el") :host github :repo "domtronn/all-the-icons.el") "hide-mode-line" (hide-mode-line :type git :flavor melpa :host github :repo "hlissner/emacs-hide-mode-line") "highlight-numbers" (highlight-numbers :type git :flavor melpa :host github :repo "Fanael/highlight-numbers") "rainbow-delimiters" (rainbow-delimiters :type git :flavor melpa :host github :repo "Fanael/rainbow-delimiters") "restart-emacs" (restart-emacs :type git :flavor melpa :host github :repo "iqbalansari/restart-emacs") "better-jumper" (better-jumper :type git :flavor melpa :host github :repo "gilbertw1/better-jumper") "dtrt-indent" (dtrt-indent :type git :flavor melpa :host github :repo "jscheid/dtrt-indent") "helpful" (helpful :type git :flavor melpa :host github :repo "Wilfred/helpful") "pcre2el" (pcre2el :type git :flavor melpa :host github :repo "joddie/pcre2el") "smartparens" (smartparens :type git :flavor melpa :host github :repo "Fuco1/smartparens") "ws-butler" (ws-butler :type git :flavor melpa :host github :repo "hlissner/ws-butler") "projectile" (projectile :type git :flavor melpa :host github :repo "bbatsov/projectile") "project" nil "general" (general :type git :flavor melpa :host github :repo "noctuid/general.el") "which-key" (which-key :type git :flavor melpa :host github :repo "justbur/emacs-which-key") "pyim" (pyim :type git :flavor melpa :host github :repo "tumashu/pyim") "fcitx" (fcitx :type git :flavor melpa :host github :repo "cute-jumper/fcitx.el") "ace-pinyin" (ace-pinyin :type git :flavor melpa :host github :repo "cute-jumper/ace-pinyin") "pangu-spacing" (pangu-spacing :type git :flavor melpa :host github :repo "coldnew/pangu-spacing") "company" (company :type git :flavor melpa :files (:defaults "icons" ("images/small" "doc/images/small/*.png") "company-pkg.el") :host github :repo "company-mode/company-mode") "company-dict" (company-dict :type git :flavor melpa :host github :repo "hlissner/emacs-company-dict") "flx-ido" (flx-ido :type git :flavor melpa :files ("flx-ido.el" "flx-ido-pkg.el") :host github :repo "lewang/flx") "ido-completing-read+" (ido-completing-read+ :type git :flavor melpa :host github :repo "DarwinAwardWinner/ido-completing-read-plus") "ido-sort-mtime" (ido-sort-mtime :type git :flavor melpa :host github :repo "pkkm/ido-sort-mtime") "ido-vertical-mode" (ido-vertical-mode :type git :flavor melpa :host github :repo "creichert/ido-vertical-mode.el") "crm-custom" (crm-custom :type git :flavor melpa :host github :repo "DarwinAwardWinner/crm-custom") "swiper" (swiper :type git :flavor melpa :files ("swiper.el" "swiper-pkg.el") :host github :repo "abo-abo/swiper") "amx" (amx :type git :flavor melpa :host github :repo "DarwinAwardWinner/amx") "counsel-projectile" (counsel-projectile :type git :flavor melpa :host github :repo "ericdanan/counsel-projectile") "ivy-rich" (ivy-rich :type git :flavor melpa :host github :repo "Yevgnen/ivy-rich") "wgrep" (wgrep :type git :flavor melpa :files ("wgrep.el" "wgrep-pkg.el") :host github :repo "mhayashi1120/Emacs-wgrep") "doom-themes" (doom-themes :type git :flavor melpa :files (:defaults "themes/*.el" "themes/*/*.el" "extensions/*.el" "doom-themes-pkg.el") :host github :repo "doomemacs/themes") "solaire-mode" (solaire-mode :type git :flavor melpa :host github :repo "hlissner/emacs-solaire-mode") "hl-todo" (hl-todo :type git :flavor melpa :host github :repo "tarsius/hl-todo") "highlight-indent-guides" (highlight-indent-guides :type git :flavor melpa :host github :repo "DarthFennec/highlight-indent-guides") "minimap" nil "doom-modeline" (doom-modeline :type git :flavor melpa :host github :repo "seagle0128/doom-modeline") "anzu" (anzu :type git :flavor melpa :host github :repo "emacsorphanage/anzu") "evil-anzu" (evil-anzu :type git :flavor melpa :host github :repo "emacsorphanage/evil-anzu") "nav-flash" (nav-flash :type git :flavor melpa :host github :repo "rolandwalker/nav-flash") "neotree" (neotree :type git :flavor melpa :files (:defaults "icons" "neotree-pkg.el") :host github :repo "jaypei/emacs-neotree") "evil-goggles" (evil-goggles :type git :flavor melpa :host github :repo "edkolev/evil-goggles") "centaur-tabs" (centaur-tabs :type git :flavor melpa :host github :repo "ema2159/centaur-tabs") "unicode-fonts" (unicode-fonts :type git :flavor melpa :host github :repo "rolandwalker/unicode-fonts") "git-gutter-fringe" (git-gutter-fringe :type git :flavor melpa :host github :repo "emacsorphanage/git-gutter-fringe") "vi-tilde-fringe" (vi-tilde-fringe :type git :flavor melpa :host github :repo "syl20bnr/vi-tilde-fringe") "ace-window" (ace-window :type git :flavor melpa :host github :repo "abo-abo/ace-window") "persp-mode" (persp-mode :type git :flavor melpa :host github :repo "Bad-ptr/persp-mode.el") "evil" (evil :type git :flavor melpa :files (:defaults "doc/build/texinfo/evil.texi" (:exclude "evil-test-helpers.el") "evil-pkg.el") :host github :repo "emacs-evil/evil") "evil-args" (evil-args :type git :flavor melpa :host github :repo "wcsmith/evil-args") "evil-easymotion" (evil-easymotion :type git :flavor melpa :host github :repo "PythonNut/evil-easymotion") "evil-embrace" (evil-embrace :type git :flavor melpa :host github :repo "cute-jumper/evil-embrace.el") "evil-escape" (evil-escape :type git :flavor melpa :host github :repo "hlissner/evil-escape") "evil-exchange" (evil-exchange :type git :flavor melpa :host github :repo "Dewdrops/evil-exchange") "evil-indent-plus" (evil-indent-plus :type git :flavor melpa :host github :repo "TheBB/evil-indent-plus") "evil-lion" (evil-lion :type git :flavor melpa :host github :repo "edkolev/evil-lion") "evil-nerd-commenter" (evil-nerd-commenter :type git :flavor melpa :host github :repo "redguardtoo/evil-nerd-commenter") "evil-numbers" (evil-numbers :type git :flavor melpa :host github :repo "juliapath/evil-numbers") "evil-snipe" (evil-snipe :type git :flavor melpa :host github :repo "hlissner/evil-snipe") "evil-surround" (evil-surround :type git :flavor melpa :host github :repo "emacs-evil/evil-surround") "evil-textobj-anyblock" (evil-textobj-anyblock :type git :flavor melpa :host github :repo "willghatch/evil-textobj-anyblock" :branch "fix-inner-block") "evil-traces" (evil-traces :type git :flavor melpa :host github :repo "mamapanda/evil-traces") "evil-visualstar" (evil-visualstar :type git :flavor melpa :host github :repo "bling/evil-visualstar") "exato" (exato :type git :flavor melpa :host github :repo "ninrod/exato") "evil-quick-diff" nil "evil-collection" (evil-collection :type git :flavor melpa :files (:defaults "modes" "evil-collection-pkg.el") :host github :repo "emacs-evil/evil-collection") "yasnippet" (yasnippet :type git :flavor melpa :files ("yasnippet.el" "snippets" "yasnippet-pkg.el") :host github :repo "joaotavora/yasnippet") "vimish-fold" (vimish-fold :type git :flavor melpa :host github :repo "matsievskiysv/vimish-fold") "evil-vimish-fold" (evil-vimish-fold :type git :flavor melpa :host github :repo "alexmurray/evil-vimish-fold") "evil-multiedit" (evil-multiedit :type git :flavor melpa :host github :repo "hlissner/evil-multiedit") "evil-mc" (evil-mc :type git :flavor melpa :host github :repo "gabesoft/evil-mc") "parinfer-rust-mode" (parinfer-rust-mode :type git :flavor melpa :host github :repo "justinbarclay/parinfer-rust-mode") "auto-yasnippet" (auto-yasnippet :type git :flavor melpa :host github :repo "abo-abo/auto-yasnippet") "doom-snippets" nil "adaptive-wrap" nil "diredfl" (diredfl :type git :flavor melpa :host github :repo "purcell/diredfl") "dired-git-info" nil "diff-hl" (diff-hl :type git :flavor melpa :host github :repo "dgutov/diff-hl") "dired-rsync" (dired-rsync :type git :flavor melpa :host github :repo "stsquad/dired-rsync") "fd-dired" (fd-dired :type git :flavor melpa :host github :repo "yqrashawn/fd-dired") "ibuffer-projectile" (ibuffer-projectile :type git :flavor melpa :host github :repo "purcell/ibuffer-projectile") "ibuffer-vc" (ibuffer-vc :type git :flavor melpa :host github :repo "purcell/ibuffer-vc") "undo-fu" (undo-fu :type git :flavor melpa :repo "https://codeberg.org/ideasman42/emacs-undo-fu.git") "undo-fu-session" (undo-fu-session :type git :flavor melpa :repo "https://codeberg.org/ideasman42/emacs-undo-fu-session.git") "browse-at-remote" (browse-at-remote :type git :flavor melpa :host github :repo "rmuslimov/browse-at-remote") "git-commit" (git-commit :type git :flavor melpa :files ("lisp/git-commit.el" "lisp/git-commit-pkg.el" "git-commit-pkg.el") :host github :repo "magit/magit") "git-timemachine" (git-timemachine :type git :flavor melpa :host gitlab :repo "pidu/git-timemachine") "git-modes" (git-modes :type git :flavor melpa :host github :repo "magit/git-modes") "multi-term" (multi-term :type git :flavor melpa :host github :repo "manateelazycat/multi-term") "vterm" (vterm :type git :flavor melpa :files ("*" (:exclude ".dir-locals.el" ".gitignore" ".clang-format" ".travis.yml") "vterm-pkg.el") :host github :repo "akermu/emacs-libvterm") "flycheck" (flycheck :type git :flavor melpa :host github :repo "flycheck/flycheck") "flycheck-popup-tip" (flycheck-popup-tip :type git :flavor melpa :host github :repo "flycheck/flycheck-popup-tip") "flyspell-correct" (flyspell-correct :type git :flavor melpa :files ("flyspell-correct.el" "flyspell-correct-ido.el" "flyspell-correct-pkg.el") :host github :repo "d12frosted/flyspell-correct") "flyspell-lazy" (flyspell-lazy :type git :flavor melpa :host github :repo "rolandwalker/flyspell-lazy") "langtool" (langtool :type git :flavor melpa :host github :repo "mhayashi1120/Emacs-langtool") "writegood-mode" (writegood-mode :type git :flavor melpa :host github :repo "bnbeckwith/writegood-mode") "ansible" (ansible :type git :flavor melpa :files ("*.el" "snippets" "dict" "ansible-pkg.el") :host github :repo "k1LoW/emacs-ansible" :nonrecursive t) "ansible-doc" (ansible-doc :type git :flavor melpa :host github :repo "emacsorphanage/ansible-doc") "jinja2-mode" (jinja2-mode :type git :flavor melpa :host github :repo "paradoxxxzero/jinja2-mode") "yaml-mode" (yaml-mode :type git :flavor melpa :host github :repo "yoshiki/yaml-mode") "company-ansible" (company-ansible :type git :flavor melpa :host github :repo "krzysztof-magosa/company-ansible") "realgud" (realgud :type git :flavor melpa :files ("realgud.el" "realgud/.nosearch" "realgud-recursive-autoloads.el" ("realgud/common" "realgud/common/*.el") ("realgud/common/buffer" "realgud/common/buffer/*.el") ("realgud/debugger/bashdb" "realgud/debugger/bashdb/*.el") ("realgud/debugger/gdb" "realgud/debugger/gdb/*.el") ("realgud/debugger/gub" "realgud/debugger/gub/*.el") ("realgud/debugger/ipdb" "realgud/debugger/ipdb/*.el") ("realgud/debugger/jdb" "realgud/debugger/jdb/*.el") ("realgud/debugger/kshdb" "realgud/debugger/kshdb/*.el") ("realgud/debugger/nodejs" "realgud/debugger/nodejs/*.el") ("realgud/debugger/pdb" "realgud/debugger/pdb/*.el") ("realgud/debugger/perldb" "realgud/debugger/perldb/*.el") ("realgud/debugger/rdebug" "realgud/debugger/rdebug/*.el") ("realgud/debugger/remake" "realgud/debugger/remake/*.el") ("realgud/debugger/trepan" "realgud/debugger/trepan/*.el") ("realgud/debugger/trepan.pl" "realgud/debugger/trepan.pl/*.el") ("realgud/debugger/trepan2" "realgud/debugger/trepan2/*.el") ("realgud/debugger/trepan3k" "realgud/debugger/trepan3k/*.el") ("realgud/debugger/trepanjs" "realgud/debugger/trepanjs/*.el") ("realgud/debugger/zshdb" "realgud/debugger/zshdb/*.el") ("realgud/lang" "realgud/lang/*.el") "realgud-pkg.el") :host github :repo "realgud/realgud") "realgud-trepan-ni" (realgud-trepan-ni :type git :flavor melpa :files (:defaults ("trepan-ni" "trepan-ni/*.el") "realgud-trepan-ni-pkg.el") :host github :repo "realgud/realgud-trepan-ni") "dap-mode" (dap-mode :type git :flavor melpa :files (:defaults "icons" "dap-mode-pkg.el") :host github :repo "emacs-lsp/dap-mode") "posframe" (posframe :type git :flavor melpa :host github :repo "tumashu/posframe") "envrc" (envrc :type git :flavor melpa :host github :repo "purcell/envrc") "docker" (docker :type git :flavor melpa :host github :repo "Silex/docker.el") "docker-tramp" (docker-tramp :type git :flavor melpa :host github :repo "emacs-pe/docker-tramp.el") "dockerfile-mode" (dockerfile-mode :type git :flavor melpa :host github :repo "spotify/dockerfile-mode") "quickrun" (quickrun :type git :flavor melpa :host github :repo "emacsorphanage/quickrun") "eros" (eros :type git :flavor melpa :host github :repo "xiongtx/eros") "gist" (gist :type git :flavor melpa :host github :repo "defunkt/gist.el") "dumb-jump" (dumb-jump :type git :flavor melpa :host github :repo "jacktasia/dumb-jump") "ivy-xref" (ivy-xref :type git :flavor melpa :host github :repo "alexmurray/ivy-xref") "request" (request :type git :flavor melpa :files ("request.el" "request-pkg.el") :host github :repo "tkf/emacs-request") "lsp-mode" (lsp-mode :type git :flavor melpa :files (:defaults "clients/*.el" "lsp-mode-pkg.el") :host github :repo "emacs-lsp/lsp-mode") "lsp-ui" (lsp-ui :type git :flavor melpa :files (:defaults "lsp-ui-doc.html" "resources" "lsp-ui-pkg.el") :host github :repo "emacs-lsp/lsp-ui") "lsp-ivy" (lsp-ivy :type git :flavor melpa :host github :repo "emacs-lsp/lsp-ivy") "magit" (magit :type git :flavor melpa :files ("lisp/magit" "lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "Documentation/magit.texi" "Documentation/AUTHORS.md" "magit-pkg.el") :host github :repo "magit/magit") "magit-gitflow" (magit-gitflow :type git :flavor melpa :host github :repo "jtatarik/magit-gitflow") "magit-todos" (magit-todos :type git :flavor melpa :host github :repo "alphapapa/magit-todos") "code-review" (code-review :type git :flavor melpa :host github :repo "wandersoncferreira/code-review" :files ("graphql" "code-review*.el")) "makefile-executor" (makefile-executor :type git :flavor melpa :host github :repo "thiderman/makefile-executor.el") "pdf-tools" (pdf-tools :type git :flavor melpa :files (:defaults "README" ("build" "Makefile") ("build" "server") "pdf-tools-pkg.el") :host github :repo "vedang/pdf-tools") "saveplace-pdf-view" (saveplace-pdf-view :type git :flavor melpa :host github :repo "nicolaisingh/saveplace-pdf-view") "rainbow-mode" nil "kurecolor" (kurecolor :type git :flavor melpa :host github :repo "emacsfodder/kurecolor") "taskrunner" (taskrunner :type git :flavor melpa :host github :repo "emacs-taskrunner/emacs-taskrunner") "ivy-taskrunner" nil "osx-trash" (osx-trash :type git :flavor melpa :files (:defaults "*.AppleScript" "osx-trash-pkg.el") :host github :repo "emacsorphanage/osx-trash") "ns-auto-titlebar" (ns-auto-titlebar :type git :flavor melpa :host github :repo "purcell/ns-auto-titlebar") "xclip" nil "evil-terminal-cursor-changer" (evil-terminal-cursor-changer :type git :flavor melpa :host github :repo "kisaragi-hiu/evil-terminal-cursor-changer") "elm-mode" (elm-mode :type git :flavor melpa :files (:defaults "elm.tags" "elm-mode-pkg.el") :host github :repo "jcollard/elm-mode") "flycheck-elm" (flycheck-elm :type git :flavor melpa :host github :repo "bsermons/flycheck-elm") "highlight-quoted" (highlight-quoted :type git :flavor melpa :host github :repo "Fanael/highlight-quoted") "macrostep" (macrostep :type git :flavor melpa :host github :repo "joddie/macrostep") "overseer" (overseer :type git :flavor melpa :host github :repo "tonini/overseer.el") "elisp-def" (elisp-def :type git :flavor melpa :host github :repo "Wilfred/elisp-def") "elisp-demos" (elisp-demos :type git :flavor melpa :files (:defaults "*.org" "elisp-demos-pkg.el") :host github :repo "xuchunyang/elisp-demos") "flycheck-package" (flycheck-package :type git :flavor melpa :host github :repo "purcell/flycheck-package") "flycheck-cask" (flycheck-cask :type git :flavor melpa :host github :repo "flycheck/flycheck-cask") "buttercup" (buttercup :type git :flavor melpa :files (:defaults "bin" "buttercup-pkg.el") :host github :repo "jorgenschaefer/emacs-buttercup") "hy-mode" (hy-mode :type git :flavor melpa :host github :repo "hylang/hy-mode") "json-mode" (json-mode :type git :flavor melpa :host github :repo "joshwnj/json-mode") "json-snatcher" (json-snatcher :type git :flavor melpa :host github :repo "Sterlingg/json-snatcher") "counsel-jq" (counsel-jq :type git :flavor melpa :host github :repo "200ok-ch/counsel-jq") "rjsx-mode" (rjsx-mode :type git :flavor melpa :host github :repo "felipeochoa/rjsx-mode") "typescript-mode" (typescript-mode :type git :flavor melpa :host github :repo "emacs-typescript/typescript.el") "js2-refactor" (js2-refactor :type git :flavor melpa :host github :repo "js-emacs/js2-refactor.el") "npm-mode" (npm-mode :type git :flavor melpa :host github :repo "mojochao/npm-mode") "add-node-modules-path" (add-node-modules-path :type git :flavor melpa :host github :repo "codesuki/add-node-modules-path") "nodejs-repl" (nodejs-repl :type git :flavor melpa :host github :repo "abicky/nodejs-repl.el") "skewer-mode" (skewer-mode :type git :flavor melpa :files ("*.html" "*.js" "*.el" "skewer-mode-pkg.el") :host github :repo "skeeto/skewer-mode") "tide" (tide :type git :flavor melpa :files (:defaults "tsserver" "tide-pkg.el") :host github :repo "ananthakumaran/tide") "xref-js2" (xref-js2 :type git :flavor melpa :host github :repo "js-emacs/xref-js2") "auctex" nil "latex-preview-pane" (latex-preview-pane :type git :flavor melpa :files ("*.el" "*.txt" "latex-preview-pane-pkg.el") :host github :repo "jsinglet/latex-preview-pane") "evil-tex" (evil-tex :type git :flavor melpa :host github :repo "iyefrat/evil-tex") "company-auctex" (company-auctex :type git :flavor melpa :host github :repo "alexeyr/company-auctex") "company-reftex" (company-reftex :type git :flavor melpa :host github :repo "TheBB/company-reftex") "company-math" (company-math :type git :flavor melpa :host github :repo "vspinu/company-math") "markdown-mode" (markdown-mode :type git :flavor melpa :host github :repo "jrblevin/markdown-mode") "markdown-toc" (markdown-toc :type git :flavor melpa :host github :repo "ardumont/markdown-toc") "edit-indirect" (edit-indirect :type git :flavor melpa :host github :repo "Fanael/edit-indirect") "evil-markdown" nil "avy" (avy :type git :flavor melpa :host github :repo "abo-abo/avy") "htmlize" (htmlize :type git :flavor melpa :host github :repo "hniksic/emacs-htmlize") "org-yt" nil "ox-clip" (ox-clip :type git :flavor melpa :host github :repo "jkitchin/ox-clip") "toc-org" (toc-org :type git :flavor melpa :host github :repo "snosov1/toc-org") "org-cliplink" (org-cliplink :type git :flavor melpa :host github :repo "rexim/org-cliplink") "evil-org" (evil-org :type git :flavor melpa :host github :repo "hlissner/evil-org-mode") "org-pdftools" (org-pdftools :type git :flavor melpa :files ("org-pdftools.el" "org-pdftools-pkg.el") :host github :repo "fuxialexander/org-pdftools") "orgit" (orgit :type git :flavor melpa :host github :repo "magit/orgit") "ob-async" (ob-async :type git :flavor melpa :host github :repo "astahlman/ob-async") "ob-hy" (ob-hy :type git :flavor melpa :host github :repo "brantou/ob-hy") "ob-restclient" (ob-restclient :type git :flavor melpa :host github :repo "alf/ob-restclient.el") "ox-rst" (ox-rst :type git :flavor melpa :host github :repo "msnoigrs/ox-rst") "pip-requirements" (pip-requirements :type git :flavor melpa :host github :repo "Wilfred/pip-requirements.el") "lsp-pyright" (lsp-pyright :type git :flavor melpa :host github :repo "emacs-lsp/lsp-pyright") "anaconda-mode" (anaconda-mode :type git :flavor melpa :files (:defaults "anaconda-mode.py" "anaconda-mode-pkg.el") :host github :repo "pythonic-emacs/anaconda-mode") "company-anaconda" (company-anaconda :type git :flavor melpa :host github :repo "pythonic-emacs/company-anaconda") "pipenv" (pipenv :type git :flavor melpa :host github :repo "pwalsh/pipenv.el") "pyvenv" (pyvenv :type git :flavor melpa :host github :repo "jorgenschaefer/pyvenv") "pyenv-mode" (pyenv-mode :type git :flavor melpa :host github :repo "pythonic-emacs/pyenv-mode") "nose" nil "python-pytest" (python-pytest :type git :flavor melpa :host github :repo "wbolster/emacs-python-pytest") "pyimport" (pyimport :type git :flavor melpa :host github :repo "Wilfred/pyimport") "py-isort" (py-isort :type git :flavor melpa :host github :repo "paetzke/py-isort.el") "qml-mode" (qml-mode :type git :flavor melpa :host github :repo "coldnew/qml-mode") "qt-pro-mode" (qt-pro-mode :type git :flavor melpa :host github :repo "EricCrosson/qt-pro-mode") "restclient" (restclient :type git :flavor melpa :files ("restclient.el" "restclient-pkg.el") :host github :repo "pashky/restclient.el") "company-restclient" (company-restclient :type git :flavor melpa :host github :repo "iquiw/company-restclient") "sphinx-mode" (sphinx-mode :type git :flavor melpa :host github :repo "Fuco1/sphinx-mode") "rustic" (rustic :type git :flavor melpa :host github :repo "brotzeit/rustic") "racer" (racer :type git :flavor melpa :host github :repo "racer-rust/emacs-racer") "company-shell" (company-shell :type git :flavor melpa :host github :repo "Alexander-Miller/company-shell") "emmet-mode" (emmet-mode :type git :flavor melpa :host github :repo "smihica/emmet-mode") "haml-mode" (haml-mode :type git :flavor melpa :host github :repo "nex3/haml-mode") "pug-mode" (pug-mode :type git :flavor melpa :host github :repo "hlissner/emacs-pug-mode") "slim-mode" (slim-mode :type git :flavor melpa :host github :repo "slim-template/emacs-slim") "web-mode" (web-mode :type git :flavor melpa :host github :repo "fxbois/web-mode") "company-web" (company-web :type git :flavor melpa :host github :repo "osv/company-web") "sass-mode" (sass-mode :type git :flavor melpa :host github :repo "nex3/sass-mode") "stylus-mode" (stylus-mode :type git :flavor melpa :files ("stylus-mode.el" "stylus-mode-pkg.el") :host github :repo "brianc/jade-mode") "sws-mode" (sws-mode :type git :flavor melpa :files ("sws-mode.el" "sws-mode-pkg.el") :host github :repo "brianc/jade-mode") "counsel-css" (counsel-css :type git :flavor melpa :host github :repo "hlissner/emacs-counsel-css") "apel" (apel :type git :flavor melpa :files ("alist.el" "apel-ver.el" "apel-pkg.el" "broken.el" "calist.el" "emu.el" "filename.el" "install.el" "inv-23.el" "invisible.el" "mcharset.el" "mcs-20.el" "mcs-e20.el" "mule-caesar.el" "path-util.el" "pccl-20.el" "pccl.el" "pces-20.el" "pces-e20.el" "pces.el" "pcustom.el" "poe.el" "poem-e20.el" "poem-e20_3.el" "poem.el" "product.el" "pym.el" "richtext.el" "static.el" "apel-pkg.el") :branch "apel-wl" :host github :repo "wanderlust/apel") "flim" (flim :type git :flavor melpa :files ("*.texi" "*.el" (:exclude "md5-dl.el" "md5-el.el" "mel-b-dl.el" "sha1-dl.el" "smtpmail.el") "flim-pkg.el") :host github :repo "wanderlust/flim" :branch "flim-1_14-wl") "semi" (semi :type git :flavor melpa :host github :repo "wanderlust/semi" :branch "semi-1_14-wl") "wanderlust" (wanderlust :type git :flavor melpa :files ("doc/wl.texi" "doc/wl-ja.texi" "elmo/*.el" "wl/*.el" "etc/icons" (:exclude "elmo/elmo-database.el" "elmo/utf7.el" "wl/wl-dnd.el" "wl/wl-mule.el" "wl/wl-xmas.el") "wanderlust-pkg.el") :host github :repo "wanderlust/wanderlust") "calfw" (calfw :type git :flavor melpa :files ("calfw.el" "calfw-pkg.el") :host github :repo "kiwanami/emacs-calfw") "calfw-org" (calfw-org :type git :flavor melpa :files ("calfw-org.el" "calfw-org-pkg.el") :host github :repo "kiwanami/emacs-calfw") "calfw-cal" (calfw-cal :type git :flavor melpa :files ("calfw-cal.el" "calfw-cal-pkg.el") :host github :repo "kiwanami/emacs-calfw") "calfw-ical" (calfw-ical :type git :flavor melpa :files ("calfw-ical.el" "calfw-ical-pkg.el") :host github :repo "kiwanami/emacs-calfw") "org-gcal" (org-gcal :type git :flavor melpa :host github :repo "kidd/org-gcal.el") "circe" (circe :type git :flavor melpa :host github :repo "emacs-circe/circe") "circe-notifications" (circe-notifications :type git :flavor melpa :host github :repo "eqyiel/circe-notifications") "drag-stuff" (drag-stuff :type git :flavor melpa :host github :repo "rejeep/drag-stuff.el") "link-hint" (link-hint :type git :flavor melpa :host github :repo "noctuid/link-hint.el") "parent-mode" (parent-mode :type git :flavor melpa :host github :repo "Fanael/parent-mode") "dash" (dash :type git :flavor melpa :files ("dash.el" "dash.texi" "dash-pkg.el") :host github :repo "magnars/dash.el") "s" (s :type git :flavor melpa :host github :repo "magnars/s.el") "f" (f :type git :flavor melpa :host github :repo "rejeep/f.el") "elisp-refs" (elisp-refs :type git :flavor melpa :files (:defaults (:exclude "elisp-refs-bench.el") "elisp-refs-pkg.el") :host github :repo "Wilfred/elisp-refs") "cl-lib" nil "xref" nil "async" (async :type git :flavor melpa :host github :repo "jwiegley/emacs-async") "xr" nil "pinyinlib" (pinyinlib :type git :flavor melpa :host github :repo "cute-jumper/pinyinlib.el") "flx" (flx :type git :flavor melpa :files ("flx.el" "flx-pkg.el") :host github :repo "lewang/flx") "seq" nil "memoize" (memoize :type git :flavor melpa :host github :repo "skeeto/emacs-memoize") "hydra" (hydra :type git :flavor melpa :files (:defaults (:exclude "lv.el") "hydra-pkg.el") :host github :repo "abo-abo/hydra") "lv" (lv :type git :flavor melpa :files ("lv.el" "lv-pkg.el") :host github :repo "abo-abo/hydra") "shrink-path" (shrink-path :type git :flavor melpa :host gitlab :repo "bennya/shrink-path.el") "goto-chg" (goto-chg :type git :flavor melpa :host github :repo "emacs-evil/goto-chg") "powerline" (powerline :type git :flavor melpa :host github :repo "milkypostman/powerline") "font-utils" (font-utils :type git :flavor melpa :host github :repo "rolandwalker/font-utils") "persistent-soft" (persistent-soft :type git :flavor melpa :host github :repo "rolandwalker/persistent-soft") "pcache" (pcache :type git :flavor melpa :host github :repo "sigma/pcache") "list-utils" (list-utils :type git :flavor melpa :host github :repo "rolandwalker/list-utils") "ucs-utils" (ucs-utils :type git :flavor melpa :host github :repo "rolandwalker/ucs-utils") "git-gutter" (git-gutter :type git :flavor melpa :host github :repo "emacsorphanage/git-gutter") "fringe-helper" (fringe-helper :type git :flavor melpa :host github :repo "nschum/fringe-helper.el") "embrace" (embrace :type git :flavor melpa :host github :repo "cute-jumper/embrace.el") "expand-region" (expand-region :type git :flavor melpa :host github :repo "magnars/expand-region.el") "annalist" (annalist :type git :flavor melpa :host github :repo "noctuid/annalist.el") "iedit" (iedit :type git :flavor melpa :host github :repo "victorhge/iedit") "compat" nil "transient" (transient :type git :flavor melpa :host github :repo "magit/transient") "with-editor" (with-editor :type git :flavor melpa :host github :repo "magit/with-editor") "pkg-info" (pkg-info :type git :flavor melpa :host github :repo "emacsorphanage/pkg-info") "epl" (epl :type git :flavor melpa :host github :repo "cask/epl") "popup" (popup :type git :flavor melpa :host github :repo "auto-complete/popup-el") "load-relative" (load-relative :type git :flavor melpa :host github :repo "rocky/emacs-load-relative") "loc-changes" (loc-changes :type git :flavor melpa :files ("loc-changes.el" "loc-changes-pkg.el") :host github :repo "rocky/emacs-loc-changes") "test-simple" (test-simple :type git :flavor melpa :host github :repo "rocky/emacs-test-simple") "ht" (ht :type git :flavor melpa :host github :repo "Wilfred/ht.el") "spinner" nil "bui" (bui :type git :flavor melpa :host github :repo "alezost/bui.el") "lsp-treemacs" (lsp-treemacs :type git :flavor melpa :files (:defaults "icons" "lsp-treemacs-pkg.el") :host github :repo "emacs-lsp/lsp-treemacs") "treemacs" (treemacs :type git :flavor melpa :files (:defaults "Changelog.org" "icons" "src/elisp/treemacs*.el" "src/scripts/treemacs*.py" (:exclude "src/extra/*") "treemacs-pkg.el") :host github :repo "Alexander-Miller/treemacs") "pfuture" (pfuture :type git :flavor melpa :host github :repo "Alexander-Miller/pfuture") "cfrs" (cfrs :type git :flavor melpa :host github :repo "Alexander-Miller/cfrs") "inheritenv" (inheritenv :type git :flavor melpa :host github :repo "purcell/inheritenv") "aio" (aio :type git :flavor melpa :files ("aio.el" "README.md" "UNLICENSE" "aio-pkg.el") :host github :repo "skeeto/emacs-aio") "tablist" (tablist :type git :flavor melpa :host github :repo "politza/tablist") "gh" (gh :type git :flavor melpa :host github :repo "sigma/gh.el") "logito" (logito :type git :flavor melpa :host github :repo "sigma/logito") "marshal" (marshal :type git :flavor melpa :host github :repo "sigma/marshal.el") "magit-section" (magit-section :type git :flavor melpa :files ("lisp/magit-section.el" "lisp/magit-section-pkg.el" "docs/magit-section.texi" "Documentation/magit-section.texi" "magit-section-pkg.el") :host github :repo "magit/magit") "magit-popup" (magit-popup :type git :flavor melpa :host github :repo "magit/magit-popup") "closql" (closql :type git :flavor melpa :host github :repo "emacscollective/closql") "a" (a :type git :flavor melpa :host github :repo "plexus/a.el") "ghub" (ghub :type git :flavor melpa :host github :repo "magit/ghub") "treepy" (treepy :type git :flavor melpa :host github :repo "volrath/treepy.el") "uuidgen" (uuidgen :type git :flavor melpa :host github :repo "kanru/uuidgen-el") "deferred" (deferred :type git :flavor melpa :files ("deferred.el" "deferred-pkg.el") :host github :repo "kiwanami/emacs-deferred") "forge" (forge :type git :flavor melpa :host github :repo "magit/forge") "emacsql-sqlite" (emacsql-sqlite :type git :flavor melpa :files ("emacsql-sqlite.el" "sqlite" "emacsql-sqlite-pkg.el") :host github :repo "skeeto/emacsql") "emacsql" (emacsql :type git :flavor melpa :files ("emacsql.el" "emacsql-compiler.el" "emacsql-system.el" "README.md" "emacsql-pkg.el") :host github :repo "skeeto/emacsql") "yaml" (yaml :type git :flavor melpa :host github :repo "zkry/yaml.el") "emojify" (emojify :type git :flavor melpa :files (:defaults "data" "images" "emojify-pkg.el") :host github :repo "iqbalansari/emacs-emojify") "reformatter" (reformatter :type git :flavor melpa :host github :repo "purcell/emacs-reformatter") "package-lint" (package-lint :type git :flavor melpa :files (:defaults "data" (:exclude "*flymake.el") "package-lint-pkg.el") :host github :repo "purcell/package-lint") "js2-mode" (js2-mode :type git :flavor melpa :host github :repo "mooz/js2-mode") "multiple-cursors" (multiple-cursors :type git :flavor melpa :host github :repo "magnars/multiple-cursors.el") "simple-httpd" (simple-httpd :type git :flavor melpa :host github :repo "skeeto/emacs-web-server") "math-symbol-lists" (math-symbol-lists :type git :flavor melpa :host github :repo "vspinu/math-symbol-lists") "org-noter" (org-noter :type git :flavor melpa :host github :repo "weirdNox/org-noter") "pythonic" (pythonic :type git :flavor melpa :host github :repo "pythonic-emacs/pythonic") "shut-up" (shut-up :type git :flavor melpa :host github :repo "cask/shut-up") "know-your-http-well" (know-your-http-well :type git :flavor melpa :files ("emacs/*.el" "know-your-http-well-pkg.el") :host github :repo "for-GET/know-your-http-well") "rust-mode" (rust-mode :type git :flavor melpa :host github :repo "rust-lang/rust-mode") "xterm-color" (xterm-color :type git :flavor melpa :host github :repo "atomontage/xterm-color") "pos-tip" (pos-tip :type git :flavor melpa :host github :repo "pitkali/pos-tip") "web-completion-data" (web-completion-data :type git :flavor melpa :files ("*.el" "html-stuff" "web-completion-data-pkg.el") :host github :repo "osv/web-completion-data") "oauth2" nil "request-deferred" (request-deferred :type git :flavor melpa :files ("request-deferred.el" "request-deferred-pkg.el") :host github :repo "tkf/emacs-request") "alert" (alert :type git :flavor melpa :host github :repo "jwiegley/alert") "gntp" (gntp :type git :flavor melpa :host github :repo "tekai/gntp.el") "log4e" (log4e :type git :flavor melpa :host github :repo "aki2o/log4e") "persist" nil "gnu-elpa-mirror" nil "el-get" (el-get :type git :flavor melpa :files ("*.el" ("recipes" "recipes/el-get.rcp") "methods" "el-get-pkg.el") :host github :repo "dimitri/el-get") "emacsmirror-mirror" nil "ivy" (ivy :type git :flavor melpa :files (:defaults (:exclude "swiper.el" "counsel.el" "ivy-hydra.el" "ivy-avy.el") "doc/ivy-help.org" "ivy-pkg.el") :host github :repo "abo-abo/swiper") "ivy-hydra" (ivy-hydra :type git :flavor melpa :files ("ivy-hydra.el" "ivy-hydra-pkg.el") :host github :repo "abo-abo/swiper") "ivy-avy" (ivy-avy :type git :flavor melpa :files ("ivy-avy.el" "ivy-avy-pkg.el") :host github :repo "abo-abo/swiper") "counsel" (counsel :type git :flavor melpa :files ("counsel.el" "counsel-pkg.el") :host github :repo "abo-abo/swiper") "flyspell-correct-ivy" (flyspell-correct-ivy :type git :flavor melpa :files ("flyspell-correct-ivy.el" "flyspell-correct-ivy-pkg.el") :host github :repo "d12frosted/flyspell-correct") "bind-key" (bind-key :type git :flavor melpa :files ("bind-key.el" "bind-key-pkg.el") :host github :repo "jwiegley/use-package"))) gnu-elpa-mirror #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 3 "explain-pause-mode" nil "straight" nil "project" (project :type git :host github :repo "emacs-straight/project" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "minimap" (minimap :type git :host github :repo "emacs-straight/minimap" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "evil-quick-diff" nil "doom-snippets" nil "adaptive-wrap" (adaptive-wrap :type git :host github :repo "emacs-straight/adaptive-wrap" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "dired-git-info" (dired-git-info :type git :host github :repo "emacs-straight/dired-git-info" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "rainbow-mode" (rainbow-mode :type git :host github :repo "emacs-straight/rainbow-mode" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "ivy-taskrunner" nil "xclip" (xclip :type git :host github :repo "emacs-straight/xclip" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "auctex" (auctex :type git :host github :repo "emacs-straight/auctex" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "evil-markdown" nil "org-yt" nil "nose" nil "cl-lib" nil "xref" (xref :type git :host github :repo "emacs-straight/xref" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "xr" (xr :type git :host github :repo "emacs-straight/xr" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "seq" nil "compat" (compat :type git :host github :repo "emacs-straight/compat" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "spinner" (spinner :type git :host github :repo "emacs-straight/spinner" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "oauth2" (oauth2 :type git :host github :repo "emacs-straight/oauth2" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "persist" (persist :type git :host github :repo "emacs-straight/persist" :files ("*.el" "*.info" "dir" "doc" "etc" "images" "latex" "style")) "emacsmirror-mirror" nil)) el-get #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "explain-pause-mode" nil "straight" nil "evil-quick-diff" nil "doom-snippets" nil "ivy-taskrunner" nil "evil-markdown" nil "org-yt" nil "nose" nil "cl-lib" nil "seq" nil "emacsmirror-mirror" nil)) emacsmirror-mirror #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "explain-pause-mode" (explain-pause-mode :type git :host github :repo "lastquestion/explain-pause-mode") "straight" (straight :type git :host github :repo "raxod502/straight.el" :branch "develop" :local-repo "straight.el" :files ("straight*.el")) "evil-quick-diff" nil "doom-snippets" nil "ivy-taskrunner" nil "evil-markdown" nil "org-yt" nil "nose" (nose :type git :host github :repo "emacsattic/nose") "cl-lib" nil "seq" nil))))

("org-elpa" "melpa" "gnu-elpa-mirror" "el-get" "emacsmirror-mirror" "straight" "use-package" "auto-minor-mode" "gcmh" "explain-pause-mode" "all-the-icons" "hide-mode-line" "highlight-numbers" "rainbow-delimiters" "restart-emacs" "better-jumper" "dtrt-indent" "helpful" "pcre2el" "smartparens" "ws-butler" "projectile" "project" "general" "which-key" "pyim" "fcitx" "ace-pinyin" "pangu-spacing" "company" "company-dict" "flx-ido" "ido-completing-read+" "ido-sort-mtime" "ido-vertical-mode" "crm-custom" "swiper" "ivy" "ivy-hydra" "ivy-avy" "counsel" "amx" "counsel-projectile" "ivy-rich" "wgrep" "doom-themes" "solaire-mode" "hl-todo" "highlight-indent-guides" "minimap" "doom-modeline" "anzu" "evil-anzu" "nav-flash" "neotree" "evil-goggles" "centaur-tabs" "unicode-fonts" "git-gutter-fringe" "vi-tilde-fringe" "ace-window" "persp-mode" "evil" "evil-args" "evil-easymotion" "evil-embrace" "evil-escape" "evil-exchange" "evil-indent-plus" "evil-lion" "evil-nerd-commenter" "evil-numbers" "evil-snipe" "evil-surround" "evil-textobj-anyblock" "evil-traces" "evil-visualstar" "exato" "evil-quick-diff" "evil-collection" "yasnippet" "vimish-fold" "evil-vimish-fold" "evil-multiedit" "evil-mc" "parinfer-rust-mode" "auto-yasnippet" "doom-snippets" "adaptive-wrap" "diredfl" "dired-git-info" "diff-hl" "dired-rsync" "fd-dired" "ibuffer-projectile" "ibuffer-vc" "undo-fu" "undo-fu-session" "browse-at-remote" "git-commit" "git-timemachine" "git-modes" "multi-term" "vterm" "flycheck" "flycheck-popup-tip" "flyspell-correct" "flyspell-correct-ivy" "flyspell-lazy" "langtool" "writegood-mode" "ansible" "ansible-doc" "jinja2-mode" "yaml-mode" "company-ansible" "realgud" "realgud-trepan-ni" "dap-mode" "posframe" "envrc" "docker" "docker-tramp" "dockerfile-mode" "quickrun" "eros" "gist" "dumb-jump" "ivy-xref" "request" "lsp-mode" "lsp-ui" "lsp-ivy" "magit" "magit-gitflow" "magit-todos" "code-review" "makefile-executor" "pdf-tools" "saveplace-pdf-view" "rainbow-mode" "kurecolor" "taskrunner" "ivy-taskrunner" "osx-trash" "ns-auto-titlebar" "xclip" "evil-terminal-cursor-changer" "elm-mode" "flycheck-elm" "highlight-quoted" "macrostep" "overseer" "elisp-def" "elisp-demos" "flycheck-package" "flycheck-cask" "buttercup" "hy-mode" "json-mode" "json-snatcher" "counsel-jq" "rjsx-mode" "typescript-mode" "js2-refactor" "npm-mode" "add-node-modules-path" "nodejs-repl" "skewer-mode" "tide" "xref-js2" "auctex" "latex-preview-pane" "evil-tex" "company-auctex" "company-reftex" "company-math" "markdown-mode" "markdown-toc" "edit-indirect" "evil-markdown" "org" "org-contrib" "avy" "htmlize" "org-yt" "ox-clip" "toc-org" "org-cliplink" "evil-org" "org-pdftools" "orgit" "ob-async" "ob-hy" "ob-restclient" "ox-rst" "pip-requirements" "lsp-pyright" "anaconda-mode" "company-anaconda" "pipenv" "pyvenv" "pyenv-mode" "nose" "python-pytest" "pyimport" "py-isort" "qml-mode" "qt-pro-mode" "restclient" "company-restclient" "sphinx-mode" "rustic" "racer" "company-shell" "emmet-mode" "haml-mode" "pug-mode" "slim-mode" "web-mode" "company-web" "sass-mode" "stylus-mode" "sws-mode" "counsel-css" "apel" "flim" "semi" "wanderlust" "calfw" "calfw-org" "calfw-cal" "calfw-ical" "org-gcal" "circe" "circe-notifications" "drag-stuff" "link-hint" "emacs" "bind-key" "parent-mode" "dash" "s" "f" "elisp-refs" "cl-lib" "xref" "async" "xr" "pinyinlib" "flx" "seq" "memoize" "hydra" "lv" "shrink-path" "goto-chg" "powerline" "font-utils" "persistent-soft" "pcache" "list-utils" "ucs-utils" "git-gutter" "fringe-helper" "embrace" "expand-region" "annalist" "iedit" "compat" "nadvice" "transient" "with-editor" "pkg-info" "epl" "let-alist" "popup" "load-relative" "loc-changes" "test-simple" "ht" "spinner" "bui" "lsp-treemacs" "treemacs" "pfuture" "cfrs" "inheritenv" "aio" "tablist" "gh" "logito" "marshal" "magit-section" "magit-popup" "closql" "a" "ghub" "treepy" "uuidgen" "deferred" "forge" "emacsql-sqlite" "emacsql" "yaml" "emojify" "reformatter" "package-lint" "js2-mode" "multiple-cursors" "simple-httpd" "math-symbol-lists" "org-noter" "pythonic" "shut-up" "know-your-http-well" "rust-mode" "xterm-color" "pos-tip" "web-completion-data" "oauth2" "request-deferred" "alert" "gntp" "log4e" "persist")

t
